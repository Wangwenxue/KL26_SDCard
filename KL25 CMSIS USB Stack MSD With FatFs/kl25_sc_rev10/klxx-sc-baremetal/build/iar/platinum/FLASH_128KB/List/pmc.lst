###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        30/Nov/2015  21:44:53
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\src\drivers\pmc\pmc.c
#    Command line =  
#        "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\src\drivers\pmc\pmc.c" -D IAR -D
#        FREEDOM -lCN "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD
#        With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\FLASH_128KB\List\"
#        -lB "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\FLASH_128KB\List\"
#        -o "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\FLASH_128KB\Obj\"
#        --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I "D:\My
#        Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\projects\platinum\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\common\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\cpu\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\cpu\headers\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\llwu\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\lptmr\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\mcg\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\pmc\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\rcm\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\rtc\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\smc\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\uart\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\wdog\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\cmp\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\platforms\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\" -Oh
#    List file    =  
#        D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\FLASH_128KB\List\pmc.lst
#    Object file  =  
#        D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\FLASH_128KB\Obj\pmc.o
#
###############################################################################

D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With FatFs\kl25_sc_rev10\klxx-sc-baremetal\src\drivers\pmc\pmc.c
      1          /*
      2           * File:        pmc.c
      3           * Purpose:     Provides routines for entering low power modes.
      4           *
      5           * Notes:	Since the wakeup mechanism for low power modes
      6           *              will be application specific, these routines
      7           *              do not include code to setup interrupts to exit
      8           *              from the low power modes. The desired means of
      9           *              low power mode exit should be configured before
     10           *              calling any of these functions.
     11           *
     12           *              These routines do not include protection to
     13           *              prevent illegal state transitions in the mode
     14           *              controller, and all routines that write to the
     15           *              PMPROT register write a value to allow all
     16           *              possible low power modes (it is write once, so
     17           *              if only the currently requested mode is enabled
     18           *              a different mode couldn't be enabled later on).
     19           *              
     20           */
     21          
     22          #include "common.h"
     23          #include "pmc.h"
     24          #include "mcg.h"
     25          #include "uart.h"

   \                                 In section .bss, align 4
     26          int i;
   \                     i:
   \   00000000                      DS8 4

   \                                 In section .text, align 2, keep-with-next
     27          void LVD_Initalize(unsigned char lvd_select, 
     28                             unsigned char lvd_reset_enable,
     29                             unsigned char lvd_int_enable, 
     30                             unsigned char lvw_select,
     31                             unsigned char lvw_int_enable){
   \                     LVD_Initalize: (+1)
   \   00000000   0xB470             PUSH     {R4-R6}
     32              PMC_LVDSC1 =  PMC_LVDSC1_LVDACK_MASK | 
     33                           (lvd_reset_enable) |   //enable LVD Reset ?
     34          	          lvd_int_enable |      //LVD Interrupt ?
     35          	          PMC_LVDSC1_LVDV(lvd_select)   ;        //select high or low LVD
   \   00000002   0x....             LDR      R4,??DataTable4  ;; 0x4007d000
   \   00000004   0x2540             MOVS     R5,#+64
   \   00000006   0x2603             MOVS     R6,#+3
   \   00000008   0x430A             ORRS     R2,R2,R1
   \   0000000A   0x4030             ANDS     R0,R0,R6
   \   0000000C   0x4310             ORRS     R0,R0,R2
   \   0000000E   0x4328             ORRS     R0,R0,R5
   \   00000010   0x7020             STRB     R0,[R4, #+0]
     36              PMC_LVDSC2  = PMC_LVDSC2_LVWACK_MASK | 
     37                           (lvw_int_enable) |    //LVW interrupt?
     38                            PMC_LVDSC2_LVWV(lvw_select);  // select LVW level 1,2,3 or 4
   \   00000012   0x9803             LDR      R0,[SP, #+12]
   \   00000014   0x401E             ANDS     R6,R6,R3
   \   00000016   0x4306             ORRS     R6,R6,R0
   \   00000018   0x4335             ORRS     R5,R5,R6
   \   0000001A   0x7065             STRB     R5,[R4, #+1]
     39          }
   \   0000001C   0xBC70             POP      {R4-R6}
   \   0000001E   0x4770             BX       LR               ;; return
     40          //******************************************************************************

   \                                 In section .text, align 2, keep-with-next
     41          void LVD_Init(void)
     42          {
     43          /* setup LVD
     44          Low-Voltage Detect Voltage Select
     45          Selects the LVD trip point voltage (VLVD).
     46          00 Low trip point selected (VLVD = VLVDL)
     47          01 High trip point selected (VLVD = VLVDH)
     48          10 Reserved
     49          11 Reserved
     50            */
     51          	PMC_LVDSC1 =  PMC_LVDSC1_LVDRE_MASK |   //enable LVD Reset
     52          	               PMC_LVDSC1_LVDV(1);   //Enable LVD Reset High level
   \                     LVD_Init: (+1)
   \   00000000   0x....             LDR      R0,??DataTable4  ;; 0x4007d000
   \   00000002   0x2111             MOVS     R1,#+17
   \   00000004   0x7001             STRB     R1,[R0, #+0]
     53          
     54                  
     55          PMC_LVDSC2  = PMC_LVDSC2_LVWACK_MASK | 
     56                        PMC_LVDSC2_LVWV(3) ;
   \   00000006   0x2143             MOVS     R1,#+67
   \   00000008   0x7041             STRB     R1,[R0, #+1]
     57          
     58          
     59          // ack to clear initial flags
     60          PMC_LVDSC1 |= PMC_LVDSC1_LVDACK_MASK; 
   \   0000000A   0x2140             MOVS     R1,#+64
   \   0000000C   0x7802             LDRB     R2,[R0, #+0]
   \   0000000E   0x430A             ORRS     R2,R2,R1
   \   00000010   0x7002             STRB     R2,[R0, #+0]
     61          PMC_LVDSC2 |= PMC_LVDSC2_LVWACK_MASK;
   \   00000012   0x7842             LDRB     R2,[R0, #+1]
   \   00000014   0x4311             ORRS     R1,R1,R2
   \   00000016   0x7041             STRB     R1,[R0, #+1]
     62          
     63          /* 
     64          LVWV if LVD high range selected
     65          2.621
     66          2.72
     67          2.82
     68          2.92
     69          LVDV if LVD low range selected
     70          1.74
     71          1.84
     72          1.94
     73          
     74          
     75          */
     76          }
   \   00000018   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
     77          void pmc_lvd_isr(void)
     78          {
   \                     pmc_lvd_isr: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     79           
     80            if (PMC_LVDSC1 &PMC_LVDSC1_LVDF_MASK){
   \   00000002   0x2580             MOVS     R5,#+128
   \   00000004   0x....             LDR      R4,??DataTable4  ;; 0x4007d000
   \   00000006   0x7820             LDRB     R0,[R4, #+0]
   \   00000008   0x4228             TST      R0,R5
   \   0000000A   0xD002             BEQ      ??pmc_lvd_isr_0
     81             printf("[LVD_isr]LV DETECT interrupt occurred");
   \   0000000C   0x....             ADR.N    R0,?_0
   \   0000000E   0x.... 0x....      BL       printf
     82            }
     83            if (PMC_LVDSC2 &PMC_LVDSC2_LVWF_MASK){
   \                     ??pmc_lvd_isr_0: (+1)
   \   00000012   0x7860             LDRB     R0,[R4, #+1]
   \   00000014   0x4228             TST      R0,R5
   \   00000016   0xD002             BEQ      ??pmc_lvd_isr_1
     84             printf("[LVD_isr]LV WARNING interrupt occurred");
   \   00000018   0x....             ADR.N    R0,?_1
   \   0000001A   0x.... 0x....      BL       printf
     85            }
     86           
     87           // ack to clear initial flags
     88           PMC_LVDSC1 |= PMC_LVDSC1_LVDACK_MASK; 
   \                     ??pmc_lvd_isr_1: (+1)
   \   0000001E   0x2040             MOVS     R0,#+64
   \   00000020   0x7821             LDRB     R1,[R4, #+0]
   \   00000022   0x4301             ORRS     R1,R1,R0
   \   00000024   0x7021             STRB     R1,[R4, #+0]
     89           PMC_LVDSC2 |= PMC_LVDSC2_LVWACK_MASK;
   \   00000026   0x7861             LDRB     R1,[R4, #+1]
   \   00000028   0x4308             ORRS     R0,R0,R1
   \   0000002A   0x7060             STRB     R0,[R4, #+1]
     90          
     91          }
   \   0000002C   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x4007D000         DC32     0x4007d000

   \                                 In section .text, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x5B 0x4C          DC8 "[LVD_isr]LV DETECT interrupt occurred"
   \              0x56 0x44    
   \              0x5F 0x69    
   \              0x73 0x72    
   \              0x5D 0x4C    
   \              0x56 0x20    
   \              0x44 0x45    
   \              0x54 0x45    
   \              0x43 0x54    
   \              0x20 0x69    
   \              0x6E 0x74    
   \              0x65 0x72    
   \              0x72 0x75    
   \              0x70 0x74    
   \              0x20 0x6F    
   \              0x63 0x63    
   \              0x75 0x72    
   \              0x72 0x65    
   \              0x64 0x00    
   \   00000026   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x5B 0x4C          DC8 "[LVD_isr]LV WARNING interrupt occurred"
   \              0x56 0x44    
   \              0x5F 0x69    
   \              0x73 0x72    
   \              0x5D 0x4C    
   \              0x56 0x20    
   \              0x57 0x41    
   \              0x52 0x4E    
   \              0x49 0x4E    
   \              0x47 0x20    
   \              0x69 0x6E    
   \              0x74 0x65    
   \              0x72 0x72    
   \              0x75 0x70    
   \              0x74 0x20    
   \              0x6F 0x63    
   \              0x63 0x75    
   \              0x72 0x72    
   \              0x65 0x64    
   \              0x00         
   \   00000027   0x00               DC8 0
     92          
     93          
     94          
     95          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   LVD_Init
      12   LVD_Initalize
      16   pmc_lvd_isr
        16   -> printf


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
      40  ?_0
      40  ?_1
      26  LVD_Init
      32  LVD_Initalize
       4  i
      46  pmc_lvd_isr

 
   4 bytes in section .bss
 188 bytes in section .text
 
 188 bytes of CODE memory
   4 bytes of DATA memory

Errors: none
Warnings: none
