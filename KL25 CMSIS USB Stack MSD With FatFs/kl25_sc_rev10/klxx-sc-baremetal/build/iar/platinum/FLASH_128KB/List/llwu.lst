###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        30/Nov/2015  21:44:52
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\src\drivers\llwu\llwu.c
#    Command line =  
#        "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\src\drivers\llwu\llwu.c" -D IAR
#        -D FREEDOM -lCN "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD
#        With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\FLASH_128KB\List\"
#        -lB "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\FLASH_128KB\List\"
#        -o "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\FLASH_128KB\Obj\"
#        --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I "D:\My
#        Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\projects\platinum\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\common\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\cpu\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\cpu\headers\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\llwu\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\lptmr\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\mcg\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\pmc\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\rcm\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\rtc\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\smc\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\uart\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\wdog\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\drivers\cmp\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\..\..\src\platforms\"
#        -I "D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\..\" -Oh
#    List file    =  
#        D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\FLASH_128KB\List\llwu.lst
#    Object file  =  
#        D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\platinum\FLASH_128KB\Obj\llwu.o
#
###############################################################################

D:\My Project\ZhiyunKangkai\KL25 CMSIS USB Stack MSD With FatFs\kl25_sc_rev10\klxx-sc-baremetal\src\drivers\llwu\llwu.c
      1          /*!
      2           * \file    llwu.c
      3           * \brief   common LLWU routines
      4           *
      5           * This file defines the functions/interrupt handlers/macros used for LLWU to be used as wakeup source.
      6           * And some common initializations.
      7           *
      8           * \version $Revision: 1.0 $
      9           * \author  Philip Drake(rxaa60)
     10           ***/
     11          
     12          #include "common.h"
     13          #include "llwu.h"
     14          #include "mcg.h"
     15          #include "vectors.h"
     16          
     17          extern int re_init_clk;
     18          extern int clock_freq_hz;
     19          
     20          
     21          /* function: llwu_configure
     22          
     23             description: Set up the LLWU for wakeup the MCU from LLS and VLLSx modes 
     24             from the selected pin or module.
     25             
     26             inputs:
     27             pin_en - unsigned integer, bit position indicates the pin is enabled.  
     28                      More than one bit can be set to enable more than one pin at a time.  
     29             
     30             rise_fall - 0x00 = External input disabled as wakeup
     31                         0x01 - External input enabled as rising edge detection
     32                         0x02 - External input enabled as falling edge detection
     33                         0x03 - External input enablge as any edge detection
     34             module_en - unsigned char, bit position indicates the module is enabled.  
     35                         More than one bit can be set to enabled more than one module                   
     36             
     37             for example:  if bit 0 and 1 need to be enabled as rising edge detect call this  routine with
     38             pin_en = 0x0003 and rise_fall = 0x02
     39             
     40             Note: to set up one set of pins for rising and another for falling, 2 calls to this 
     41                   function are required, 1st for rising then the second for falling.
     42             
     43          */
     44          

   \                                 In section .text, align 4, keep-with-next
     45          void llwu_configure(unsigned int pin_en, unsigned char rise_fall, unsigned char module_en ) {
   \                     llwu_configure: (+1)
   \   00000000   0xB5F7             PUSH     {R0-R2,R4-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
     46              uint8 temp;
     47              
     48              temp = LLWU_PE1;
   \   00000004   0x....             LDR      R5,??DataTable19  ;; 0x4007c000
   \   00000006   0x782E             LDRB     R6,[R5, #+0]
   \   00000008   0x07E0             LSLS     R0,R4,#+31
   \   0000000A   0xD502             BPL      ??llwu_configure_0
     49              if( pin_en & 0x0001)
     50              {      
     51                  printf("\n Invalid LLWU configured pin PTE1/SCI1_RX/I2C1_SCL /SPI1_SIN");      
   \   0000000C   0x....             LDR      R0,??DataTable19_1
   \   0000000E   0x.... 0x....      BL       printf
   \                     ??llwu_configure_0: (+1)
   \   00000012   0x07A0             LSLS     R0,R4,#+30
   \   00000014   0xD503             BPL      ??llwu_configure_1
     52              }
     53              if( pin_en & 0x0002)
     54              {      
     55                  printf("\n Invalid LLWU configured pin PTE2/SPI1_SCK/SDHC0_DCLK");       
   \   00000016   0xBF00             Nop      
   \   00000018   0x....             ADR.N    R0,?_1
   \   0000001A   0x.... 0x....      BL       printf
   \                     ??llwu_configure_1: (+1)
   \   0000001E   0x0760             LSLS     R0,R4,#+29
   \   00000020   0xD503             BPL      ??llwu_configure_2
     56              }
     57              if( pin_en & 0x0004)
     58              {
     59                  printf("\n Invalid LLWU configured pin PTE4/SPI1_PCS0/SDHC0_D3");
   \   00000022   0xBF00             Nop      
   \   00000024   0x....             ADR.N    R0,?_2
   \   00000026   0x.... 0x....      BL       printf
   \                     ??llwu_configure_2: (+1)
   \   0000002A   0x0720             LSLS     R0,R4,#+28
   \   0000002C   0xD503             BPL      ??llwu_configure_3
     60              }
     61              if( pin_en & 0x0008)
     62              {
     63                  printf("\n Invalid LLWU configured pin PTA4/FTM0_CH1/NMI/EZP_CS");
   \   0000002E   0xBF00             Nop      
   \   00000030   0x....             ADR.N    R0,?_3
   \   00000032   0x.... 0x....      BL       printf
     64              }
     65              LLWU_PE1 = temp;
   \                     ??llwu_configure_3: (+1)
   \   00000036   0x702E             STRB     R6,[R5, #+0]
     66          
     67              temp = LLWU_PE2;
   \   00000038   0x786E             LDRB     R6,[R5, #+1]
   \   0000003A   0x06E0             LSLS     R0,R4,#+27
   \   0000003C   0xD503             BPL      ??llwu_configure_4
     68              if( pin_en & 0x0010)
     69              {
     70                  printf("\n Invalid LLWU configured pin PTA13/FTM1_CH1 /FTM1_QD_PHB");
   \   0000003E   0xBF00             Nop      
   \   00000040   0x....             ADR.N    R0,?_4
   \   00000042   0x.... 0x....      BL       printf
   \                     ??llwu_configure_4: (+1)
   \   00000046   0x06A0             LSLS     R0,R4,#+26
   \   00000048   0xD50D             BPL      ??llwu_configure_5
     71              }
     72              if( pin_en & 0x0020)
     73              {
     74                  temp |= LLWU_PE2_WUPE5(rise_fall);
   \   0000004A   0x4668             MOV      R0,SP
   \   0000004C   0x7900             LDRB     R0,[R0, #+4]
   \   0000004E   0x0081             LSLS     R1,R0,#+2
   \   00000050   0x200C             MOVS     R0,#+12
   \   00000052   0x4008             ANDS     R0,R0,R1
   \   00000054   0x4330             ORRS     R0,R0,R6
   \   00000056   0x0006             MOVS     R6,R0
     75                  printf("\n LLWU configured pins PTB0/I2C0_SCL/FTM1_CH0/FTM1_QD_PHA is LLWU wakeup source ");
   \   00000058   0x....             ADR.N    R0,?_5
   \   0000005A   0x.... 0x....      BL       printf
     76                  LLWU_F1 |= LLWU_F1_WUF5_MASK;   // write one to clear the flag
   \   0000005E   0x7968             LDRB     R0,[R5, #+5]
   \   00000060   0x2120             MOVS     R1,#+32
   \   00000062   0x4301             ORRS     R1,R1,R0
   \   00000064   0x7169             STRB     R1,[R5, #+5]
   \                     ??llwu_configure_5: (+1)
   \   00000066   0x0660             LSLS     R0,R4,#+25
   \   00000068   0xD50D             BPL      ??llwu_configure_6
     77              }
     78              if( pin_en & 0x0040)
     79              {
     80                  temp |= LLWU_PE2_WUPE6(rise_fall);
   \   0000006A   0x4668             MOV      R0,SP
   \   0000006C   0x7900             LDRB     R0,[R0, #+4]
   \   0000006E   0x0101             LSLS     R1,R0,#+4
   \   00000070   0x2030             MOVS     R0,#+48
   \   00000072   0x4008             ANDS     R0,R0,R1
   \   00000074   0x4330             ORRS     R0,R0,R6
   \   00000076   0x0006             MOVS     R6,R0
     81                  printf("\n LLWU configured pins PTC1/SCI1_RTS/FTM0_CH0 is LLWU wakeup source ");
   \   00000078   0x....             ADR.N    R0,?_6
   \   0000007A   0x.... 0x....      BL       printf
     82                  LLWU_F1 |= LLWU_F1_WUF6_MASK;   // write one to clear the flag
   \   0000007E   0x7968             LDRB     R0,[R5, #+5]
   \   00000080   0x2140             MOVS     R1,#+64
   \   00000082   0x4301             ORRS     R1,R1,R0
   \   00000084   0x7169             STRB     R1,[R5, #+5]
     83              }
     84              if( pin_en & 0x0080)
   \                     ??llwu_configure_6: (+1)
   \   00000086   0x2780             MOVS     R7,#+128
   \   00000088   0x423C             TST      R4,R7
   \   0000008A   0xD00C             BEQ      ??llwu_configure_7
     85              {
     86                  temp |= LLWU_PE2_WUPE7(rise_fall);
   \   0000008C   0x0031             MOVS     R1,R6
   \   0000008E   0x4668             MOV      R0,SP
   \   00000090   0x7900             LDRB     R0,[R0, #+4]
   \   00000092   0x0186             LSLS     R6,R0,#+6
   \   00000094   0xB2F6             UXTB     R6,R6
   \   00000096   0x430E             ORRS     R6,R6,R1
     87                  printf("\n LLWU configured pins PTC3/SCI1_RX/FTM0_CH2 is LLWU wakeup source ");
   \   00000098   0x....             ADR.N    R0,?_7
   \   0000009A   0x.... 0x....      BL       printf
     88                  LLWU_F1 |= LLWU_F1_WUF7_MASK;   // write one to clear the flag
   \   0000009E   0x7968             LDRB     R0,[R5, #+5]
   \   000000A0   0x2180             MOVS     R1,#+128
   \   000000A2   0x4301             ORRS     R1,R1,R0
   \   000000A4   0x7169             STRB     R1,[R5, #+5]
     89              }
     90              LLWU_PE2 = temp;
   \                     ??llwu_configure_7: (+1)
   \   000000A6   0x706E             STRB     R6,[R5, #+1]
     91          
     92              temp = LLWU_PE3;
   \   000000A8   0x78AE             LDRB     R6,[R5, #+2]
     93              if( pin_en & 0x0100)
   \   000000AA   0x05E0             LSLS     R0,R4,#+23
   \   000000AC   0xD50D             BPL      ??llwu_configure_8
     94              {
     95                  temp |= LLWU_PE3_WUPE8(rise_fall);
   \   000000AE   0x0031             MOVS     R1,R6
   \   000000B0   0x4668             MOV      R0,SP
   \   000000B2   0x7900             LDRB     R0,[R0, #+4]
   \   000000B4   0x0786             LSLS     R6,R0,#+30
   \   000000B6   0x0FB6             LSRS     R6,R6,#+30
   \   000000B8   0x430E             ORRS     R6,R6,R1
     96                  printf("\n LLWU configured pins PTC4/SPI0_PCS0/FTM0_CH3 is LLWU wakeup source ");
   \   000000BA   0xBF00             Nop      
   \   000000BC   0x....             ADR.N    R0,?_8
   \   000000BE   0x.... 0x....      BL       printf
     97                  LLWU_F2 |= LLWU_F2_WUF8_MASK;   // write one to clear the flag
   \   000000C2   0x79A8             LDRB     R0,[R5, #+6]
   \   000000C4   0x2101             MOVS     R1,#+1
   \   000000C6   0x4301             ORRS     R1,R1,R0
   \   000000C8   0x71A9             STRB     R1,[R5, #+6]
     98              }
     99              if( pin_en & 0x0200)
   \                     ??llwu_configure_8: (+1)
   \   000000CA   0x05A0             LSLS     R0,R4,#+22
   \   000000CC   0xD50D             BPL      ??llwu_configure_9
    100              {
    101                  temp |= LLWU_PE3_WUPE9(rise_fall);
   \   000000CE   0x4668             MOV      R0,SP
   \   000000D0   0x7900             LDRB     R0,[R0, #+4]
   \   000000D2   0x0081             LSLS     R1,R0,#+2
   \   000000D4   0x200C             MOVS     R0,#+12
   \   000000D6   0x4008             ANDS     R0,R0,R1
   \   000000D8   0x4330             ORRS     R0,R0,R6
   \   000000DA   0x0006             MOVS     R6,R0
    102                  printf("\n LLWU configured pins PTC5/SPI0_SCK/I2S0_RXD0 is LLWU wakeup source ");
   \   000000DC   0x....             ADR.N    R0,?_9
   \   000000DE   0x.... 0x....      BL       printf
    103                  LLWU_F2 |= LLWU_F2_WUF9_MASK;   // write one to clear the flag
   \   000000E2   0x79A8             LDRB     R0,[R5, #+6]
   \   000000E4   0x2102             MOVS     R1,#+2
   \   000000E6   0x4301             ORRS     R1,R1,R0
   \   000000E8   0x71A9             STRB     R1,[R5, #+6]
    104              }
    105              if( pin_en & 0x0400)
   \                     ??llwu_configure_9: (+1)
   \   000000EA   0x0560             LSLS     R0,R4,#+21
   \   000000EC   0xD50D             BPL      ??llwu_configure_10
    106              {
    107                  temp |= LLWU_PE3_WUPE10(rise_fall);
   \   000000EE   0x4668             MOV      R0,SP
   \   000000F0   0x7900             LDRB     R0,[R0, #+4]
   \   000000F2   0x0101             LSLS     R1,R0,#+4
   \   000000F4   0x2030             MOVS     R0,#+48
   \   000000F6   0x4008             ANDS     R0,R0,R1
   \   000000F8   0x4330             ORRS     R0,R0,R6
   \   000000FA   0x0006             MOVS     R6,R0
    108                  printf("\n LLWU configured pins PTC6/PDB0_EXTRG to be an LLWU wakeup source ");
   \   000000FC   0x....             ADR.N    R0,?_10
   \   000000FE   0x.... 0x....      BL       printf
    109                  LLWU_F2 |= LLWU_F2_WUF10_MASK;   // write one to clear the flag
   \   00000102   0x79A8             LDRB     R0,[R5, #+6]
   \   00000104   0x2104             MOVS     R1,#+4
   \   00000106   0x4301             ORRS     R1,R1,R0
   \   00000108   0x71A9             STRB     R1,[R5, #+6]
    110              }
    111              if( pin_en & 0x0800)
   \                     ??llwu_configure_10: (+1)
   \   0000010A   0x0520             LSLS     R0,R4,#+20
   \   0000010C   0xD50D             BPL      ??llwu_configure_11
    112              {
    113                  temp |= LLWU_PE3_WUPE11(rise_fall);
   \   0000010E   0x0031             MOVS     R1,R6
   \   00000110   0x4668             MOV      R0,SP
   \   00000112   0x7900             LDRB     R0,[R0, #+4]
   \   00000114   0x0186             LSLS     R6,R0,#+6
   \   00000116   0xB2F6             UXTB     R6,R6
   \   00000118   0x430E             ORRS     R6,R6,R1
    114                  printf("\n LLWU configured pins PTC11/I2S0_RXD1 to be an LLWU wakeup source ");
   \   0000011A   0xBF00             Nop      
   \   0000011C   0x....             ADR.N    R0,?_11
   \   0000011E   0x.... 0x....      BL       printf
    115                  LLWU_F2 |= LLWU_F2_WUF11_MASK;   // write one to clear the flag
   \   00000122   0x79A8             LDRB     R0,[R5, #+6]
   \   00000124   0x2108             MOVS     R1,#+8
   \   00000126   0x4301             ORRS     R1,R1,R0
   \   00000128   0x71A9             STRB     R1,[R5, #+6]
    116              }
    117              LLWU_PE3 = temp;
   \                     ??llwu_configure_11: (+1)
   \   0000012A   0x70AE             STRB     R6,[R5, #+2]
    118          
    119              temp = LLWU_PE4;
   \   0000012C   0x78EE             LDRB     R6,[R5, #+3]
    120              if( pin_en & 0x1000)
   \   0000012E   0x04E0             LSLS     R0,R4,#+19
   \   00000130   0xD50D             BPL      ??llwu_configure_12
    121              {
    122                  temp |= LLWU_PE4_WUPE12(rise_fall);
   \   00000132   0x0031             MOVS     R1,R6
   \   00000134   0x4668             MOV      R0,SP
   \   00000136   0x7900             LDRB     R0,[R0, #+4]
   \   00000138   0x0786             LSLS     R6,R0,#+30
   \   0000013A   0x0FB6             LSRS     R6,R6,#+30
   \   0000013C   0x430E             ORRS     R6,R6,R1
    123                  printf("\n LLWU configured pins PTD0/SPI0_PCS0/SCI2_RTS to be an LLWU wakeup source ");
   \   0000013E   0xBF00             Nop      
   \   00000140   0x....             ADR.N    R0,?_12
   \   00000142   0x.... 0x....      BL       printf
    124                  LLWU_F2 |= LLWU_F2_WUF12_MASK;   // write one to clear the flag
   \   00000146   0x79A8             LDRB     R0,[R5, #+6]
   \   00000148   0x2110             MOVS     R1,#+16
   \   0000014A   0x4301             ORRS     R1,R1,R0
   \   0000014C   0x71A9             STRB     R1,[R5, #+6]
    125              }
    126              if( pin_en & 0x2000)
   \                     ??llwu_configure_12: (+1)
   \   0000014E   0x04A0             LSLS     R0,R4,#+18
   \   00000150   0xD50D             BPL      ??llwu_configure_13
    127              {
    128                  temp |= LLWU_PE4_WUPE13(rise_fall);
   \   00000152   0x4668             MOV      R0,SP
   \   00000154   0x7900             LDRB     R0,[R0, #+4]
   \   00000156   0x0081             LSLS     R1,R0,#+2
   \   00000158   0x200C             MOVS     R0,#+12
   \   0000015A   0x4008             ANDS     R0,R0,R1
   \   0000015C   0x4330             ORRS     R0,R0,R6
   \   0000015E   0x0006             MOVS     R6,R0
    129                  printf("\n LLWU configured pins PTD2/SCI2_RX to be an LLWU wakeup source ");
   \   00000160   0x....             LDR      R0,??DataTable19_2
   \   00000162   0x.... 0x....      BL       printf
    130                  LLWU_F2 |= LLWU_F2_WUF13_MASK;   // write one to clear the flag
   \   00000166   0x79A8             LDRB     R0,[R5, #+6]
   \   00000168   0x2120             MOVS     R1,#+32
   \   0000016A   0x4301             ORRS     R1,R1,R0
   \   0000016C   0x71A9             STRB     R1,[R5, #+6]
    131              }
    132              if( pin_en & 0x4000)
   \                     ??llwu_configure_13: (+1)
   \   0000016E   0x0460             LSLS     R0,R4,#+17
   \   00000170   0xD50D             BPL      ??llwu_configure_14
    133              {
    134                  temp |= LLWU_PE4_WUPE14(rise_fall);
   \   00000172   0x4668             MOV      R0,SP
   \   00000174   0x7900             LDRB     R0,[R0, #+4]
   \   00000176   0x0101             LSLS     R1,R0,#+4
   \   00000178   0x2030             MOVS     R0,#+48
   \   0000017A   0x4008             ANDS     R0,R0,R1
   \   0000017C   0x4330             ORRS     R0,R0,R6
   \   0000017E   0x0006             MOVS     R6,R0
    135                  printf("\n LLWU configured pins PTD4/SCI0_RTS/FTM0_CH4/EWM_IN is LLWU wakeup source ");
   \   00000180   0x....             ADR.N    R0,?_14
   \   00000182   0x.... 0x....      BL       printf
    136                  LLWU_F2 |= LLWU_F2_WUF14_MASK;   // write one to clear the flag
   \   00000186   0x79A8             LDRB     R0,[R5, #+6]
   \   00000188   0x2140             MOVS     R1,#+64
   \   0000018A   0x4301             ORRS     R1,R1,R0
   \   0000018C   0x71A9             STRB     R1,[R5, #+6]
    137              }
    138              if( pin_en & 0x8000)
   \                     ??llwu_configure_14: (+1)
   \   0000018E   0x0420             LSLS     R0,R4,#+16
   \   00000190   0xD50B             BPL      ??llwu_configure_15
    139              {
    140                  temp |= LLWU_PE4_WUPE15(rise_fall);
   \   00000192   0x0031             MOVS     R1,R6
   \   00000194   0x4668             MOV      R0,SP
   \   00000196   0x7900             LDRB     R0,[R0, #+4]
   \   00000198   0x0186             LSLS     R6,R0,#+6
   \   0000019A   0xB2F6             UXTB     R6,R6
   \   0000019C   0x430E             ORRS     R6,R6,R1
    141                  printf("\n LLWU configured pins PTD6/SCI0_RX/FTM0_CH6/FTM0_FLT0 is LLWU wakeup source ");
   \   0000019E   0x....             LDR      R0,??DataTable19_3
   \   000001A0   0x.... 0x....      BL       printf
    142                  LLWU_F2 |= LLWU_F2_WUF15_MASK;   // write one to clear the flag
   \   000001A4   0x79A8             LDRB     R0,[R5, #+6]
   \   000001A6   0x4307             ORRS     R7,R7,R0
   \   000001A8   0x71AF             STRB     R7,[R5, #+6]
    143              }
    144              LLWU_PE4 = temp;
   \                     ??llwu_configure_15: (+1)
   \   000001AA   0x70EE             STRB     R6,[R5, #+3]
    145              if (module_en == 0){
   \   000001AC   0x4668             MOV      R0,SP
   \   000001AE   0x7A00             LDRB     R0,[R0, #+8]
   \   000001B0   0x2800             CMP      R0,#+0
   \   000001B2   0xD101             BNE      ??llwu_configure_16
    146                LLWU_ME = 0;
   \   000001B4   0x7128             STRB     R0,[R5, #+4]
   \   000001B6   0xE008             B        ??llwu_configure_17
    147              }else  {
    148              LLWU_ME |= module_en;  //Set up more modules to wakeup up
   \                     ??llwu_configure_16: (+1)
   \   000001B8   0x7928             LDRB     R0,[R5, #+4]
   \   000001BA   0x4669             MOV      R1,SP
   \   000001BC   0x7A09             LDRB     R1,[R1, #+8]
   \   000001BE   0x4301             ORRS     R1,R1,R0
   \   000001C0   0x7129             STRB     R1,[R5, #+4]
    149              printf("\n LLWU configured modules as LLWU wakeup sources = 0x%02X,",(LLWU_ME));
   \   000001C2   0x7929             LDRB     R1,[R5, #+4]
   \   000001C4   0x....             ADR.N    R0,?_16
   \   000001C6   0x.... 0x....      BL       printf
    150          
    151              }
    152          } // End LLWU Configuration
   \                     ??llwu_configure_17: (+1)
   \   000001CA   0xB003             ADD      SP,SP,#+12
   \   000001CC   0xBDF0             POP      {R4-R7,PC}       ;; return
    153          
    154          

   \                                 In section .text, align 4, keep-with-next
    155          void llwu_configure_filter(unsigned int wu_pin_num, unsigned char filter_en, unsigned char rise_fall ) 
    156          {
   \                     llwu_configure_filter: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x0014             MOVS     R4,R2
    157             //wu_pin_num is the pin number to be written to FILTSEL.  wu_pin_num is not the same as pin_en. 
    158              uint8 temp;
    159          
    160              printf("\nEnabling Filter %x on WU Pin %x for WU sense %x \n",filter_en, wu_pin_num, rise_fall);
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0023             MOVS     R3,R4
   \   0000000A   0x002A             MOVS     R2,R5
   \   0000000C   0x....             ADR.N    R0,?_17
   \   0000000E   0x.... 0x....      BL       printf
    161             
    162               temp = 0;
    163               //first clear filter values and clear flag by writing a 1
    164               LLWU_FILT1 = LLWU_FILT1_FILTF_MASK;
   \   00000012   0x....             LDR      R0,??DataTable21  ;; 0x4007c008
   \   00000014   0x2180             MOVS     R1,#+128
   \   00000016   0x7001             STRB     R1,[R0, #+0]
    165               LLWU_FILT2 = LLWU_FILT2_FILTF_MASK;
   \   00000018   0x7041             STRB     R1,[R0, #+1]
    166               
    167               if(filter_en == 1)
   \   0000001A   0x2E01             CMP      R6,#+1
   \   0000001C   0xD106             BNE      ??llwu_configure_filter_0
    168               {
    169              	 //clear the flag bit and set the others
    170                   temp |= (LLWU_FILT1_FILTF_MASK) | (LLWU_FILT1_FILTE(rise_fall) | LLWU_FILT1_FILTSEL(wu_pin_num));         
    171                   LLWU_FILT1 = temp;
   \   0000001E   0x0162             LSLS     R2,R4,#+5
   \   00000020   0x072B             LSLS     R3,R5,#+28
   \   00000022   0x0F1B             LSRS     R3,R3,#+28
   \   00000024   0x4313             ORRS     R3,R3,R2
   \   00000026   0x4319             ORRS     R1,R1,R3
   \   00000028   0x7001             STRB     R1,[R0, #+0]
   \   0000002A   0xBD70             POP      {R4-R6,PC}
    172                   
    173               }else if (filter_en == 2)
   \                     ??llwu_configure_filter_0: (+1)
   \   0000002C   0x2E02             CMP      R6,#+2
   \   0000002E   0xD106             BNE      ??llwu_configure_filter_1
    174               {
    175              	 //clear the flag bit and set the others
    176              	 temp |= (LLWU_FILT2_FILTF_MASK) | (LLWU_FILT2_FILTE(rise_fall) | LLWU_FILT2_FILTSEL(wu_pin_num));         
    177                   LLWU_FILT2 = temp;
   \   00000030   0x0162             LSLS     R2,R4,#+5
   \   00000032   0x072B             LSLS     R3,R5,#+28
   \   00000034   0x0F1B             LSRS     R3,R3,#+28
   \   00000036   0x4313             ORRS     R3,R3,R2
   \   00000038   0x4319             ORRS     R1,R1,R3
   \   0000003A   0x7041             STRB     R1,[R0, #+1]
   \   0000003C   0xBD70             POP      {R4-R6,PC}
    178               }else
    179               {
    180              	 printf("\nError - invalid filter number\n"); 
   \                     ??llwu_configure_filter_1: (+1)
   \   0000003E   0xBF00             Nop      
   \   00000040   0x....             ADR.N    R0,?_18
   \   00000042   0x.... 0x....      BL       printf
    181               }
    182          }    
   \   00000046   0xBD70             POP      {R4-R6,PC}       ;; return
    183              
    184          //Interrupt handler for LLWU 
    185          #ifdef CMSIS
    186          void LLW_IRQHandler(void) {
    187          #else

   \                                 In section .text, align 2, keep-with-next
    188          void llwu_isr(void){
   \                     llwu_isr: (+1)
   \   00000000   0xB430             PUSH     {R4,R5}
    189          #endif
    190             //printf("\n [LLWU ISR] "); 
    191             if (LLWU_F1 & LLWU_F1_WUF5_MASK) {
   \   00000002   0x2220             MOVS     R2,#+32
   \   00000004   0x....             LDR      R0,??DataTable21_1  ;; 0x4007c005
   \   00000006   0x7801             LDRB     R1,[R0, #+0]
   \   00000008   0x4211             TST      R1,R2
   \   0000000A   0xD002             BEQ      ??llwu_isr_0
    192             //    printf("****WUF5 was set *****\r\n"); 
    193                 LLWU_F1 |= LLWU_F1_WUF5_MASK;   // write one to clear the flag
   \   0000000C   0x7801             LDRB     R1,[R0, #+0]
   \   0000000E   0x4311             ORRS     R1,R1,R2
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    194             }
    195             if (LLWU_F1 & LLWU_F1_WUF6_MASK) {
   \                     ??llwu_isr_0: (+1)
   \   00000012   0x2340             MOVS     R3,#+64
   \   00000014   0x7801             LDRB     R1,[R0, #+0]
   \   00000016   0x4219             TST      R1,R3
   \   00000018   0xD002             BEQ      ??llwu_isr_1
    196             //    printf("****WUF6 was set *****\r\n"); 
    197                 LLWU_F1 |= LLWU_F1_WUF6_MASK;   // write one to clear the flag
   \   0000001A   0x7801             LDRB     R1,[R0, #+0]
   \   0000001C   0x4319             ORRS     R1,R1,R3
   \   0000001E   0x7001             STRB     R1,[R0, #+0]
    198              }
    199             if (LLWU_F1 & LLWU_F1_WUF7_MASK) {
   \                     ??llwu_isr_1: (+1)
   \   00000020   0x2180             MOVS     R1,#+128
   \   00000022   0x7804             LDRB     R4,[R0, #+0]
   \   00000024   0x2580             MOVS     R5,#+128
   \   00000026   0x422C             TST      R4,R5
   \   00000028   0xD002             BEQ      ??llwu_isr_2
    200             //    printf("****WUF7 was set from PTC3 input  *****\r\n"); 
    201                 LLWU_F1 |= LLWU_F1_WUF7_MASK;   // write one to clear the flag
   \   0000002A   0x7804             LDRB     R4,[R0, #+0]
   \   0000002C   0x4325             ORRS     R5,R5,R4
   \   0000002E   0x7005             STRB     R5,[R0, #+0]
    202             }
    203             if (LLWU_F2 & LLWU_F2_WUF8_MASK) {
   \                     ??llwu_isr_2: (+1)
   \   00000030   0x7844             LDRB     R4,[R0, #+1]
   \   00000032   0x07E4             LSLS     R4,R4,#+31
   \   00000034   0xD503             BPL      ??llwu_isr_3
    204             //    printf("****WUF8 was set *****\r\n"); 
    205                 LLWU_F2 |= LLWU_F2_WUF8_MASK;   // write one to clear the flag
   \   00000036   0x7844             LDRB     R4,[R0, #+1]
   \   00000038   0x2501             MOVS     R5,#+1
   \   0000003A   0x4325             ORRS     R5,R5,R4
   \   0000003C   0x7045             STRB     R5,[R0, #+1]
    206             }
    207             if (LLWU_F2 & LLWU_F2_WUF9_MASK) {
   \                     ??llwu_isr_3: (+1)
   \   0000003E   0x2402             MOVS     R4,#+2
   \   00000040   0x7845             LDRB     R5,[R0, #+1]
   \   00000042   0x4225             TST      R5,R4
   \   00000044   0xD002             BEQ      ??llwu_isr_4
    208             //    printf("****WUF9 was set *****\r\n"); 
    209                 LLWU_F2 |= LLWU_F2_WUF9_MASK;   // write one to clear the flag
   \   00000046   0x7845             LDRB     R5,[R0, #+1]
   \   00000048   0x432C             ORRS     R4,R4,R5
   \   0000004A   0x7044             STRB     R4,[R0, #+1]
    210             }
    211             if (LLWU_F2 & LLWU_F2_WUF10_MASK) {
   \                     ??llwu_isr_4: (+1)
   \   0000004C   0x2404             MOVS     R4,#+4
   \   0000004E   0x7845             LDRB     R5,[R0, #+1]
   \   00000050   0x4225             TST      R5,R4
   \   00000052   0xD002             BEQ      ??llwu_isr_5
    212             //    printf("****WUF10 was set *****\r\n"); 
    213                 LLWU_F2 |= LLWU_F2_WUF10_MASK;   // write one to clear the flag
   \   00000054   0x7845             LDRB     R5,[R0, #+1]
   \   00000056   0x432C             ORRS     R4,R4,R5
   \   00000058   0x7044             STRB     R4,[R0, #+1]
    214             }
    215             if (LLWU_F2 & LLWU_F2_WUF11_MASK) {
   \                     ??llwu_isr_5: (+1)
   \   0000005A   0x2408             MOVS     R4,#+8
   \   0000005C   0x7845             LDRB     R5,[R0, #+1]
   \   0000005E   0x4225             TST      R5,R4
   \   00000060   0xD002             BEQ      ??llwu_isr_6
    216             //    printf("****WUF11 was set *****\r\n"); 
    217                 LLWU_F2 |= LLWU_F2_WUF11_MASK;   // write one to clear the flag
   \   00000062   0x7845             LDRB     R5,[R0, #+1]
   \   00000064   0x432C             ORRS     R4,R4,R5
   \   00000066   0x7044             STRB     R4,[R0, #+1]
    218             }
    219             if (LLWU_F2 & LLWU_F2_WUF12_MASK) {
   \                     ??llwu_isr_6: (+1)
   \   00000068   0x2410             MOVS     R4,#+16
   \   0000006A   0x7845             LDRB     R5,[R0, #+1]
   \   0000006C   0x4225             TST      R5,R4
   \   0000006E   0xD002             BEQ      ??llwu_isr_7
    220             //    printf("****WUF12 was set *****\r\n"); 
    221                 LLWU_F2 |= LLWU_F2_WUF12_MASK;   // write one to clear the flag
   \   00000070   0x7845             LDRB     R5,[R0, #+1]
   \   00000072   0x432C             ORRS     R4,R4,R5
   \   00000074   0x7044             STRB     R4,[R0, #+1]
    222             }
    223             if (LLWU_F2 & LLWU_F2_WUF13_MASK) {
   \                     ??llwu_isr_7: (+1)
   \   00000076   0x7844             LDRB     R4,[R0, #+1]
   \   00000078   0x4214             TST      R4,R2
   \   0000007A   0xD002             BEQ      ??llwu_isr_8
    224             //    printf("****WUF13 was set *****\r\n"); 
    225                 LLWU_F2 |= LLWU_F2_WUF13_MASK;   // write one to clear the flag
   \   0000007C   0x7844             LDRB     R4,[R0, #+1]
   \   0000007E   0x4322             ORRS     R2,R2,R4
   \   00000080   0x7042             STRB     R2,[R0, #+1]
    226             }
    227             if (LLWU_F2 & LLWU_F2_WUF14_MASK) {
   \                     ??llwu_isr_8: (+1)
   \   00000082   0x7842             LDRB     R2,[R0, #+1]
   \   00000084   0x421A             TST      R2,R3
   \   00000086   0xD002             BEQ      ??llwu_isr_9
    228             //    printf("****WUF14 was set *****\r\n"); 
    229                 LLWU_F2 |= LLWU_F2_WUF14_MASK;   // write one to clear the flag
   \   00000088   0x7842             LDRB     R2,[R0, #+1]
   \   0000008A   0x4313             ORRS     R3,R3,R2
   \   0000008C   0x7043             STRB     R3,[R0, #+1]
    230             }
    231             if (LLWU_F2 & LLWU_F2_WUF15_MASK) {
   \                     ??llwu_isr_9: (+1)
   \   0000008E   0x7842             LDRB     R2,[R0, #+1]
   \   00000090   0x2380             MOVS     R3,#+128
   \   00000092   0x421A             TST      R2,R3
   \   00000094   0xD002             BEQ      ??llwu_isr_10
    232             //    printf("****WUF15 was set *****\r\n"); 
    233                 LLWU_F2 |= LLWU_F2_WUF15_MASK;   // write one to clear the flag
   \   00000096   0x7842             LDRB     R2,[R0, #+1]
   \   00000098   0x4313             ORRS     R3,R3,R2
   \   0000009A   0x7043             STRB     R3,[R0, #+1]
    234             }
    235             
    236             /************************************************************************
    237              * Note: This ISR does not write to the LLWU_F3 register because these
    238              * are peripheral module wakeups.  The flags contained in the LLWU_F3 
    239              * register should be cleared through the associated module interrupt 
    240              * and not through the LLWU_F3 per the Kinetis L Family Reference
    241              * Manual (LLWU Chapter)
    242              **********************************************************************/
    243            if (LLWU_F3 & LLWU_F3_MWUF0_MASK) {
   \                     ??llwu_isr_10: (+1)
   \   0000009C   0x7882             LDRB     R2,[R0, #+2]
   \   0000009E   0x07D2             LSLS     R2,R2,#+31
   \   000000A0   0xD50A             BPL      ??llwu_isr_11
    244              //   printf("****WUF3_MWUF0 IF  LPTMR  *****\r\n"); 
    245                   SIM_SCGC5 |= SIM_SCGC5_LPTMR_MASK;
   \   000000A2   0x....             LDR      R2,??DataTable21_2  ;; 0x40048038
   \   000000A4   0x6813             LDR      R3,[R2, #+0]
   \   000000A6   0x2401             MOVS     R4,#+1
   \   000000A8   0x431C             ORRS     R4,R4,R3
   \   000000AA   0x6014             STR      R4,[R2, #+0]
    246                   LPTMR0_CSR |=  LPTMR_CSR_TCF_MASK;   // write 1 to TCF to clear the LPT timer compare flag
   \   000000AC   0x....             LDR      R2,??DataTable21_3  ;; 0x40040000
   \   000000AE   0x6813             LDR      R3,[R2, #+0]
   \   000000B0   0x430B             ORRS     R3,R3,R1
   \   000000B2   0x6013             STR      R3,[R2, #+0]
    247                   LPTMR0_CSR = ( LPTMR_CSR_TEN_MASK | LPTMR_CSR_TIE_MASK | LPTMR_CSR_TCF_MASK  );
   \   000000B4   0x23C1             MOVS     R3,#+193
   \   000000B6   0x6013             STR      R3,[R2, #+0]
    248             }
    249             if(LLWU_FILT1 & LLWU_FILT1_FILTF_MASK){
   \                     ??llwu_isr_11: (+1)
   \   000000B8   0x78C2             LDRB     R2,[R0, #+3]
   \   000000BA   0x2380             MOVS     R3,#+128
   \   000000BC   0x421A             TST      R2,R3
   \   000000BE   0xD002             BEQ      ??llwu_isr_12
    250          	   
    251          	   LLWU_FILT1 |= LLWU_FILT1_FILTF_MASK;
   \   000000C0   0x78C2             LDRB     R2,[R0, #+3]
   \   000000C2   0x4313             ORRS     R3,R3,R2
   \   000000C4   0x70C3             STRB     R3,[R0, #+3]
    252             }
    253             if(LLWU_FILT2 & LLWU_FILT2_FILTF_MASK){
   \                     ??llwu_isr_12: (+1)
   \   000000C6   0x7902             LDRB     R2,[R0, #+4]
   \   000000C8   0x2380             MOVS     R3,#+128
   \   000000CA   0x421A             TST      R2,R3
   \   000000CC   0xD002             BEQ      ??llwu_isr_13
    254          	   
    255          	   LLWU_FILT2 |= LLWU_FILT2_FILTF_MASK;
   \   000000CE   0x7902             LDRB     R2,[R0, #+4]
   \   000000D0   0x4313             ORRS     R3,R3,R2
   \   000000D2   0x7103             STRB     R3,[R0, #+4]
    256             }
    257             NVIC_ICPR |= 1 << (LLWU_irq_no%32);
   \                     ??llwu_isr_13: (+1)
   \   000000D4   0x....             LDR      R0,??DataTable21_4  ;; 0xe000e280
   \   000000D6   0x6802             LDR      R2,[R0, #+0]
   \   000000D8   0x4311             ORRS     R1,R1,R2
   \   000000DA   0x6001             STR      R1,[R0, #+0]
    258          }
   \   000000DC   0xBC30             POP      {R4,R5}
   \   000000DE   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19:
   \   00000000   0x4007C000         DC32     0x4007c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_1:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_2:
   \   00000000   0x........         DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable19_3:
   \   00000000   0x........         DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ?_1:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 49H, 6EH, 76H, 61H, 6CH, 69H
   \              0x49 0x6E    
   \              0x76 0x61    
   \              0x6C 0x69    
   \   00000008   0x64 0x20          DC8 64H, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000010   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000018   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 20H, 50H, 54H
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x50 0x54    
   \   00000020   0x45 0x32          DC8 45H, 32H, 2FH, 53H, 50H, 49H, 31H, 5FH
   \              0x2F 0x53    
   \              0x50 0x49    
   \              0x31 0x5F    
   \   00000028   0x53 0x43          DC8 53H, 43H, 4BH, 2FH, 53H, 44H, 48H, 43H
   \              0x4B 0x2F    
   \              0x53 0x44    
   \              0x48 0x43    
   \   00000030   0x30 0x5F          DC8 30H, 5FH, 44H, 43H, 4CH, 4BH, 0
   \              0x44 0x43    
   \              0x4C 0x4B    
   \              0x00         
   \   00000037   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_2:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 49H, 6EH, 76H, 61H, 6CH, 69H
   \              0x49 0x6E    
   \              0x76 0x61    
   \              0x6C 0x69    
   \   00000008   0x64 0x20          DC8 64H, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000010   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000018   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 20H, 50H, 54H
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x50 0x54    
   \   00000020   0x45 0x34          DC8 45H, 34H, 2FH, 53H, 50H, 49H, 31H, 5FH
   \              0x2F 0x53    
   \              0x50 0x49    
   \              0x31 0x5F    
   \   00000028   0x50 0x43          DC8 50H, 43H, 53H, 30H, 2FH, 53H, 44H, 48H
   \              0x53 0x30    
   \              0x2F 0x53    
   \              0x44 0x48    
   \   00000030   0x43 0x30          DC8 43H, 30H, 5FH, 44H, 33H, 0
   \              0x5F 0x44    
   \              0x33 0x00    
   \   00000036   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_3:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 49H, 6EH, 76H, 61H, 6CH, 69H
   \              0x49 0x6E    
   \              0x76 0x61    
   \              0x6C 0x69    
   \   00000008   0x64 0x20          DC8 64H, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000010   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000018   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 20H, 50H, 54H
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x50 0x54    
   \   00000020   0x41 0x34          DC8 41H, 34H, 2FH, 46H, 54H, 4DH, 30H, 5FH
   \              0x2F 0x46    
   \              0x54 0x4D    
   \              0x30 0x5F    
   \   00000028   0x43 0x48          DC8 43H, 48H, 31H, 2FH, 4EH, 4DH, 49H, 2FH
   \              0x31 0x2F    
   \              0x4E 0x4D    
   \              0x49 0x2F    
   \   00000030   0x45 0x5A          DC8 45H, 5AH, 50H, 5FH, 43H, 53H, 0
   \              0x50 0x5F    
   \              0x43 0x53    
   \              0x00         
   \   00000037   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_4:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 49H, 6EH, 76H, 61H, 6CH, 69H
   \              0x49 0x6E    
   \              0x76 0x61    
   \              0x6C 0x69    
   \   00000008   0x64 0x20          DC8 64H, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000010   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000018   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 20H, 50H, 54H
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x50 0x54    
   \   00000020   0x41 0x31          DC8 41H, 31H, 33H, 2FH, 46H, 54H, 4DH, 31H
   \              0x33 0x2F    
   \              0x46 0x54    
   \              0x4D 0x31    
   \   00000028   0x5F 0x43          DC8 5FH, 43H, 48H, 31H, 20H, 2FH, 46H, 54H
   \              0x48 0x31    
   \              0x20 0x2F    
   \              0x46 0x54    
   \   00000030   0x4D 0x31          DC8 4DH, 31H, 5FH, 51H, 44H, 5FH, 50H, 48H
   \              0x5F 0x51    
   \              0x44 0x5F    
   \              0x50 0x48    
   \   00000038   0x42 0x00          DC8 42H, 0
   \   0000003A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_0:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 49H, 6EH, 76H, 61H, 6CH, 69H
   \              0x49 0x6E    
   \              0x76 0x61    
   \              0x6C 0x69    
   \   00000008   0x64 0x20          DC8 64H, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000010   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000018   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 20H, 50H, 54H
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x50 0x54    
   \   00000020   0x45 0x31          DC8 45H, 31H, 2FH, 53H, 43H, 49H, 31H, 5FH
   \              0x2F 0x53    
   \              0x43 0x49    
   \              0x31 0x5F    
   \   00000028   0x52 0x58          DC8 52H, 58H, 2FH, 49H, 32H, 43H, 31H, 5FH
   \              0x2F 0x49    
   \              0x32 0x43    
   \              0x31 0x5F    
   \   00000030   0x53 0x43          DC8 53H, 43H, 4CH, 20H, 2FH, 53H, 50H, 49H
   \              0x4C 0x20    
   \              0x2F 0x53    
   \              0x50 0x49    
   \   00000038   0x31 0x5F          DC8 31H, 5FH, 53H, 49H, 4EH, 0
   \              0x53 0x49    
   \              0x4E 0x00    
   \   0000003E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_5:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000008   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000010   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 73H, 20H, 50H
   \              0x70 0x69    
   \              0x6E 0x73    
   \              0x20 0x50    
   \   00000018   0x54 0x42          DC8 54H, 42H, 30H, 2FH, 49H, 32H, 43H, 30H
   \              0x30 0x2F    
   \              0x49 0x32    
   \              0x43 0x30    
   \   00000020   0x5F 0x53          DC8 5FH, 53H, 43H, 4CH, 2FH, 46H, 54H, 4DH
   \              0x43 0x4C    
   \              0x2F 0x46    
   \              0x54 0x4D    
   \   00000028   0x31 0x5F          DC8 31H, 5FH, 43H, 48H, 30H, 2FH, 46H, 54H
   \              0x43 0x48    
   \              0x30 0x2F    
   \              0x46 0x54    
   \   00000030   0x4D 0x31          DC8 4DH, 31H, 5FH, 51H, 44H, 5FH, 50H, 48H
   \              0x5F 0x51    
   \              0x44 0x5F    
   \              0x50 0x48    
   \   00000038   0x41 0x20          DC8 41H, 20H, 69H, 73H, 20H, 4CH, 4CH, 57H
   \              0x69 0x73    
   \              0x20 0x4C    
   \              0x4C 0x57    
   \   00000040   0x55 0x20          DC8 55H, 20H, 77H, 61H, 6BH, 65H, 75H, 70H
   \              0x77 0x61    
   \              0x6B 0x65    
   \              0x75 0x70    
   \   00000048   0x20 0x73          DC8 20H, 73H, 6FH, 75H, 72H, 63H, 65H, 20H
   \              0x6F 0x75    
   \              0x72 0x63    
   \              0x65 0x20    
   \   00000050   0x00               DC8 0
   \   00000051   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_6:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000008   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000010   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 73H, 20H, 50H
   \              0x70 0x69    
   \              0x6E 0x73    
   \              0x20 0x50    
   \   00000018   0x54 0x43          DC8 54H, 43H, 31H, 2FH, 53H, 43H, 49H, 31H
   \              0x31 0x2F    
   \              0x53 0x43    
   \              0x49 0x31    
   \   00000020   0x5F 0x52          DC8 5FH, 52H, 54H, 53H, 2FH, 46H, 54H, 4DH
   \              0x54 0x53    
   \              0x2F 0x46    
   \              0x54 0x4D    
   \   00000028   0x30 0x5F          DC8 30H, 5FH, 43H, 48H, 30H, 20H, 69H, 73H
   \              0x43 0x48    
   \              0x30 0x20    
   \              0x69 0x73    
   \   00000030   0x20 0x4C          DC8 20H, 4CH, 4CH, 57H, 55H, 20H, 77H, 61H
   \              0x4C 0x57    
   \              0x55 0x20    
   \              0x77 0x61    
   \   00000038   0x6B 0x65          DC8 6BH, 65H, 75H, 70H, 20H, 73H, 6FH, 75H
   \              0x75 0x70    
   \              0x20 0x73    
   \              0x6F 0x75    
   \   00000040   0x72 0x63          DC8 72H, 63H, 65H, 20H, 0
   \              0x65 0x20    
   \              0x00         
   \   00000045   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .text, align 4, keep-with-next
   \                     ?_7:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000008   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000010   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 73H, 20H, 50H
   \              0x70 0x69    
   \              0x6E 0x73    
   \              0x20 0x50    
   \   00000018   0x54 0x43          DC8 54H, 43H, 33H, 2FH, 53H, 43H, 49H, 31H
   \              0x33 0x2F    
   \              0x53 0x43    
   \              0x49 0x31    
   \   00000020   0x5F 0x52          DC8 5FH, 52H, 58H, 2FH, 46H, 54H, 4DH, 30H
   \              0x58 0x2F    
   \              0x46 0x54    
   \              0x4D 0x30    
   \   00000028   0x5F 0x43          DC8 5FH, 43H, 48H, 32H, 20H, 69H, 73H, 20H
   \              0x48 0x32    
   \              0x20 0x69    
   \              0x73 0x20    
   \   00000030   0x4C 0x4C          DC8 4CH, 4CH, 57H, 55H, 20H, 77H, 61H, 6BH
   \              0x57 0x55    
   \              0x20 0x77    
   \              0x61 0x6B    
   \   00000038   0x65 0x75          DC8 65H, 75H, 70H, 20H, 73H, 6FH, 75H, 72H
   \              0x70 0x20    
   \              0x73 0x6F    
   \              0x75 0x72    
   \   00000040   0x63 0x65          DC8 63H, 65H, 20H, 0
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_8:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000008   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000010   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 73H, 20H, 50H
   \              0x70 0x69    
   \              0x6E 0x73    
   \              0x20 0x50    
   \   00000018   0x54 0x43          DC8 54H, 43H, 34H, 2FH, 53H, 50H, 49H, 30H
   \              0x34 0x2F    
   \              0x53 0x50    
   \              0x49 0x30    
   \   00000020   0x5F 0x50          DC8 5FH, 50H, 43H, 53H, 30H, 2FH, 46H, 54H
   \              0x43 0x53    
   \              0x30 0x2F    
   \              0x46 0x54    
   \   00000028   0x4D 0x30          DC8 4DH, 30H, 5FH, 43H, 48H, 33H, 20H, 69H
   \              0x5F 0x43    
   \              0x48 0x33    
   \              0x20 0x69    
   \   00000030   0x73 0x20          DC8 73H, 20H, 4CH, 4CH, 57H, 55H, 20H, 77H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x77    
   \   00000038   0x61 0x6B          DC8 61H, 6BH, 65H, 75H, 70H, 20H, 73H, 6FH
   \              0x65 0x75    
   \              0x70 0x20    
   \              0x73 0x6F    
   \   00000040   0x75 0x72          DC8 75H, 72H, 63H, 65H, 20H, 0
   \              0x63 0x65    
   \              0x20 0x00    
   \   00000046   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_9:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000008   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000010   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 73H, 20H, 50H
   \              0x70 0x69    
   \              0x6E 0x73    
   \              0x20 0x50    
   \   00000018   0x54 0x43          DC8 54H, 43H, 35H, 2FH, 53H, 50H, 49H, 30H
   \              0x35 0x2F    
   \              0x53 0x50    
   \              0x49 0x30    
   \   00000020   0x5F 0x53          DC8 5FH, 53H, 43H, 4BH, 2FH, 49H, 32H, 53H
   \              0x43 0x4B    
   \              0x2F 0x49    
   \              0x32 0x53    
   \   00000028   0x30 0x5F          DC8 30H, 5FH, 52H, 58H, 44H, 30H, 20H, 69H
   \              0x52 0x58    
   \              0x44 0x30    
   \              0x20 0x69    
   \   00000030   0x73 0x20          DC8 73H, 20H, 4CH, 4CH, 57H, 55H, 20H, 77H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x77    
   \   00000038   0x61 0x6B          DC8 61H, 6BH, 65H, 75H, 70H, 20H, 73H, 6FH
   \              0x65 0x75    
   \              0x70 0x20    
   \              0x73 0x6F    
   \   00000040   0x75 0x72          DC8 75H, 72H, 63H, 65H, 20H, 0
   \              0x63 0x65    
   \              0x20 0x00    
   \   00000046   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_10:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000008   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000010   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 73H, 20H, 50H
   \              0x70 0x69    
   \              0x6E 0x73    
   \              0x20 0x50    
   \   00000018   0x54 0x43          DC8 54H, 43H, 36H, 2FH, 50H, 44H, 42H, 30H
   \              0x36 0x2F    
   \              0x50 0x44    
   \              0x42 0x30    
   \   00000020   0x5F 0x45          DC8 5FH, 45H, 58H, 54H, 52H, 47H, 20H, 74H
   \              0x58 0x54    
   \              0x52 0x47    
   \              0x20 0x74    
   \   00000028   0x6F 0x20          DC8 6FH, 20H, 62H, 65H, 20H, 61H, 6EH, 20H
   \              0x62 0x65    
   \              0x20 0x61    
   \              0x6E 0x20    
   \   00000030   0x4C 0x4C          DC8 4CH, 4CH, 57H, 55H, 20H, 77H, 61H, 6BH
   \              0x57 0x55    
   \              0x20 0x77    
   \              0x61 0x6B    
   \   00000038   0x65 0x75          DC8 65H, 75H, 70H, 20H, 73H, 6FH, 75H, 72H
   \              0x70 0x20    
   \              0x73 0x6F    
   \              0x75 0x72    
   \   00000040   0x63 0x65          DC8 63H, 65H, 20H, 0
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_11:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000008   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000010   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 73H, 20H, 50H
   \              0x70 0x69    
   \              0x6E 0x73    
   \              0x20 0x50    
   \   00000018   0x54 0x43          DC8 54H, 43H, 31H, 31H, 2FH, 49H, 32H, 53H
   \              0x31 0x31    
   \              0x2F 0x49    
   \              0x32 0x53    
   \   00000020   0x30 0x5F          DC8 30H, 5FH, 52H, 58H, 44H, 31H, 20H, 74H
   \              0x52 0x58    
   \              0x44 0x31    
   \              0x20 0x74    
   \   00000028   0x6F 0x20          DC8 6FH, 20H, 62H, 65H, 20H, 61H, 6EH, 20H
   \              0x62 0x65    
   \              0x20 0x61    
   \              0x6E 0x20    
   \   00000030   0x4C 0x4C          DC8 4CH, 4CH, 57H, 55H, 20H, 77H, 61H, 6BH
   \              0x57 0x55    
   \              0x20 0x77    
   \              0x61 0x6B    
   \   00000038   0x65 0x75          DC8 65H, 75H, 70H, 20H, 73H, 6FH, 75H, 72H
   \              0x70 0x20    
   \              0x73 0x6F    
   \              0x75 0x72    
   \   00000040   0x63 0x65          DC8 63H, 65H, 20H, 0
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_12:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000008   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000010   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 73H, 20H, 50H
   \              0x70 0x69    
   \              0x6E 0x73    
   \              0x20 0x50    
   \   00000018   0x54 0x44          DC8 54H, 44H, 30H, 2FH, 53H, 50H, 49H, 30H
   \              0x30 0x2F    
   \              0x53 0x50    
   \              0x49 0x30    
   \   00000020   0x5F 0x50          DC8 5FH, 50H, 43H, 53H, 30H, 2FH, 53H, 43H
   \              0x43 0x53    
   \              0x30 0x2F    
   \              0x53 0x43    
   \   00000028   0x49 0x32          DC8 49H, 32H, 5FH, 52H, 54H, 53H, 20H, 74H
   \              0x5F 0x52    
   \              0x54 0x53    
   \              0x20 0x74    
   \   00000030   0x6F 0x20          DC8 6FH, 20H, 62H, 65H, 20H, 61H, 6EH, 20H
   \              0x62 0x65    
   \              0x20 0x61    
   \              0x6E 0x20    
   \   00000038   0x4C 0x4C          DC8 4CH, 4CH, 57H, 55H, 20H, 77H, 61H, 6BH
   \              0x57 0x55    
   \              0x20 0x77    
   \              0x61 0x6B    
   \   00000040   0x65 0x75          DC8 65H, 75H, 70H, 20H, 73H, 6FH, 75H, 72H
   \              0x70 0x20    
   \              0x73 0x6F    
   \              0x75 0x72    
   \   00000048   0x63 0x65          DC8 63H, 65H, 20H, 0
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_14:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000008   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000010   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 73H, 20H, 50H
   \              0x70 0x69    
   \              0x6E 0x73    
   \              0x20 0x50    
   \   00000018   0x54 0x44          DC8 54H, 44H, 34H, 2FH, 53H, 43H, 49H, 30H
   \              0x34 0x2F    
   \              0x53 0x43    
   \              0x49 0x30    
   \   00000020   0x5F 0x52          DC8 5FH, 52H, 54H, 53H, 2FH, 46H, 54H, 4DH
   \              0x54 0x53    
   \              0x2F 0x46    
   \              0x54 0x4D    
   \   00000028   0x30 0x5F          DC8 30H, 5FH, 43H, 48H, 34H, 2FH, 45H, 57H
   \              0x43 0x48    
   \              0x34 0x2F    
   \              0x45 0x57    
   \   00000030   0x4D 0x5F          DC8 4DH, 5FH, 49H, 4EH, 20H, 69H, 73H, 20H
   \              0x49 0x4E    
   \              0x20 0x69    
   \              0x73 0x20    
   \   00000038   0x4C 0x4C          DC8 4CH, 4CH, 57H, 55H, 20H, 77H, 61H, 6BH
   \              0x57 0x55    
   \              0x20 0x77    
   \              0x61 0x6B    
   \   00000040   0x65 0x75          DC8 65H, 75H, 70H, 20H, 73H, 6FH, 75H, 72H
   \              0x70 0x20    
   \              0x73 0x6F    
   \              0x75 0x72    
   \   00000048   0x63 0x65          DC8 63H, 65H, 20H, 0
   \              0x20 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ?_16:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000008   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000010   0x64 0x20          DC8 64H, 20H, 6DH, 6FH, 64H, 75H, 6CH, 65H
   \              0x6D 0x6F    
   \              0x64 0x75    
   \              0x6C 0x65    
   \   00000018   0x73 0x20          DC8 73H, 20H, 61H, 73H, 20H, 4CH, 4CH, 57H
   \              0x61 0x73    
   \              0x20 0x4C    
   \              0x4C 0x57    
   \   00000020   0x55 0x20          DC8 55H, 20H, 77H, 61H, 6BH, 65H, 75H, 70H
   \              0x77 0x61    
   \              0x6B 0x65    
   \              0x75 0x70    
   \   00000028   0x20 0x73          DC8 20H, 73H, 6FH, 75H, 72H, 63H, 65H, 73H
   \              0x6F 0x75    
   \              0x72 0x63    
   \              0x65 0x73    
   \   00000030   0x20 0x3D          DC8 20H, 3DH, 20H, 30H, 78H, 25H, 30H, 32H
   \              0x20 0x30    
   \              0x78 0x25    
   \              0x30 0x32    
   \   00000038   0x58 0x2C          DC8 58H, 2CH, 0
   \              0x00         
   \   0000003B   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21:
   \   00000000   0x4007C008         DC32     0x4007c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_1:
   \   00000000   0x4007C005         DC32     0x4007c005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_2:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_3:
   \   00000000   0x40040000         DC32     0x40040000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable21_4:
   \   00000000   0xE000E280         DC32     0xe000e280

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_13:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000008   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000010   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 73H, 20H, 50H
   \              0x70 0x69    
   \              0x6E 0x73    
   \              0x20 0x50    
   \   00000018   0x54 0x44          DC8 54H, 44H, 32H, 2FH, 53H, 43H, 49H, 32H
   \              0x32 0x2F    
   \              0x53 0x43    
   \              0x49 0x32    
   \   00000020   0x5F 0x52          DC8 5FH, 52H, 58H, 20H, 74H, 6FH, 20H, 62H
   \              0x58 0x20    
   \              0x74 0x6F    
   \              0x20 0x62    
   \   00000028   0x65 0x20          DC8 65H, 20H, 61H, 6EH, 20H, 4CH, 4CH, 57H
   \              0x61 0x6E    
   \              0x20 0x4C    
   \              0x4C 0x57    
   \   00000030   0x55 0x20          DC8 55H, 20H, 77H, 61H, 6BH, 65H, 75H, 70H
   \              0x77 0x61    
   \              0x6B 0x65    
   \              0x75 0x70    
   \   00000038   0x20 0x73          DC8 20H, 73H, 6FH, 75H, 72H, 63H, 65H, 20H
   \              0x6F 0x75    
   \              0x72 0x63    
   \              0x65 0x20    
   \   00000040   0x00               DC8 0
   \   00000041   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4, keep-with-next
   \                     ?_15:
   \   00000000   0x0A 0x20          DC8 0AH, 20H, 4CH, 4CH, 57H, 55H, 20H, 63H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x63    
   \   00000008   0x6F 0x6E          DC8 6FH, 6EH, 66H, 69H, 67H, 75H, 72H, 65H
   \              0x66 0x69    
   \              0x67 0x75    
   \              0x72 0x65    
   \   00000010   0x64 0x20          DC8 64H, 20H, 70H, 69H, 6EH, 73H, 20H, 50H
   \              0x70 0x69    
   \              0x6E 0x73    
   \              0x20 0x50    
   \   00000018   0x54 0x44          DC8 54H, 44H, 36H, 2FH, 53H, 43H, 49H, 30H
   \              0x36 0x2F    
   \              0x53 0x43    
   \              0x49 0x30    
   \   00000020   0x5F 0x52          DC8 5FH, 52H, 58H, 2FH, 46H, 54H, 4DH, 30H
   \              0x58 0x2F    
   \              0x46 0x54    
   \              0x4D 0x30    
   \   00000028   0x5F 0x43          DC8 5FH, 43H, 48H, 36H, 2FH, 46H, 54H, 4DH
   \              0x48 0x36    
   \              0x2F 0x46    
   \              0x54 0x4D    
   \   00000030   0x30 0x5F          DC8 30H, 5FH, 46H, 4CH, 54H, 30H, 20H, 69H
   \              0x46 0x4C    
   \              0x54 0x30    
   \              0x20 0x69    
   \   00000038   0x73 0x20          DC8 73H, 20H, 4CH, 4CH, 57H, 55H, 20H, 77H
   \              0x4C 0x4C    
   \              0x57 0x55    
   \              0x20 0x77    
   \   00000040   0x61 0x6B          DC8 61H, 6BH, 65H, 75H, 70H, 20H, 73H, 6FH
   \              0x65 0x75    
   \              0x70 0x20    
   \              0x73 0x6F    
   \   00000048   0x75 0x72          DC8 75H, 72H, 63H, 65H, 20H, 0
   \              0x63 0x65    
   \              0x20 0x00    
   \   0000004E   0x00 0x00          DC8 0, 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_17:
   \   00000000   0x0A 0x45          DC8 0AH, 45H, 6EH, 61H, 62H, 6CH, 69H, 6EH
   \              0x6E 0x61    
   \              0x62 0x6C    
   \              0x69 0x6E    
   \   00000008   0x67 0x20          DC8 67H, 20H, 46H, 69H, 6CH, 74H, 65H, 72H
   \              0x46 0x69    
   \              0x6C 0x74    
   \              0x65 0x72    
   \   00000010   0x20 0x25          DC8 20H, 25H, 78H, 20H, 6FH, 6EH, 20H, 57H
   \              0x78 0x20    
   \              0x6F 0x6E    
   \              0x20 0x57    
   \   00000018   0x55 0x20          DC8 55H, 20H, 50H, 69H, 6EH, 20H, 25H, 78H
   \              0x50 0x69    
   \              0x6E 0x20    
   \              0x25 0x78    
   \   00000020   0x20 0x66          DC8 20H, 66H, 6FH, 72H, 20H, 57H, 55H, 20H
   \              0x6F 0x72    
   \              0x20 0x57    
   \              0x55 0x20    
   \   00000028   0x73 0x65          DC8 73H, 65H, 6EH, 73H, 65H, 20H, 25H, 78H
   \              0x6E 0x73    
   \              0x65 0x20    
   \              0x25 0x78    
   \   00000030   0x20 0x0A          DC8 20H, 0AH, 0
   \              0x00         
   \   00000033   0x00               DC8 0

   \                                 In section .text, align 4, keep-with-next
   \                     ?_18:
   \   00000000   0x0A 0x45          DC8 "\012Error - invalid filter number\012"
   \              0x72 0x72    
   \              0x6F 0x72    
   \              0x20 0x2D    
   \              0x20 0x69    
   \              0x6E 0x76    
   \              0x61 0x6C    
   \              0x69 0x64    
   \              0x20 0x66    
   \              0x69 0x6C    
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x6E 0x75    
   \              0x6D 0x62    
   \              0x65 0x72    
   \              0x0A 0x00    

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      32   llwu_configure
        32   -> printf
      16   llwu_configure_filter
        16   -> printf
       8   llwu_isr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable19
       4  ??DataTable19_1
       4  ??DataTable19_2
       4  ??DataTable19_3
       4  ??DataTable21
       4  ??DataTable21_1
       4  ??DataTable21_2
       4  ??DataTable21_3
       4  ??DataTable21_4
      64  ?_0
      56  ?_1
      68  ?_10
      68  ?_11
      76  ?_12
      68  ?_13
      76  ?_14
      80  ?_15
      60  ?_16
      52  ?_17
      32  ?_18
      56  ?_2
      56  ?_3
      60  ?_4
      84  ?_5
      72  ?_6
      68  ?_7
      72  ?_8
      72  ?_9
     462  llwu_configure
      72  llwu_configure_filter
     224  llwu_isr

 
   212 bytes in section .rodata
 1 822 bytes in section .text
 
 1 822 bytes of CODE  memory
   212 bytes of CONST memory

Errors: none
Warnings: none
