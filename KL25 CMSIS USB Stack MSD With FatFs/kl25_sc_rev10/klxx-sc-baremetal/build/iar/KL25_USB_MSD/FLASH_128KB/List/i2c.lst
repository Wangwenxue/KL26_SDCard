###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        18/Feb/2016  22:52:44
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\src\drivers\i2c\i2c.c
#    Command line =  
#        "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\src\drivers\i2c\i2c.c" -D IAR -D
#        FREEDOM -D SD_DISK_ENABLE -lCN "D:\My Project\SDCardJicheng\KL25 CMSIS
#        USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\FLASH_128KB\List\"
#        -lB "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\FLASH_128KB\List\"
#        -o "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\FLASH_128KB\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I "D:\My
#        Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\projects\KL25_USB_MSD\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\common\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\cpu\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\cpu\headers\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\i2c\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\llwu\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\lptmr\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\mcg\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\pmc\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\rcm\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\rtc\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\smc\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\uart\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\wdog\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\cmp\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\platforms\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\" -I
#        "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\projects\KL25_USB_MSD\CMSIS
#        USB Stack\inc\" -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack
#        MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\projects\KL25_USB_MSD\CMSIS
#        USB Stack\Porting use\" -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB
#        Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\projects\KL25_USB_MSD\SPI_SDCard\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\projects\KL25_USB_MSD\FATFS\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\projects\KL25_USB_MSD\FATFS\fsl_sd_disk\"
#        -Ol
#    List file    =  
#        D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\FLASH_128KB\List\i2c.lst
#    Object file  =  
#        D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\FLASH_128KB\Obj\i2c.o
#
###############################################################################

D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With FatFs\kl25_sc_rev10\klxx-sc-baremetal\src\drivers\i2c\i2c.c
      1          /*
      2           * File:        k60_i2c.c
      3           * Purpose:     Code for initializing and using I2C
      4           *
      5           * Notes:
      6           *
      7           */
      8          #include "i2c.h"
      9          
     10          /*******************************************************************/
     11          /*!
     12           * I2C Initialization
     13           * Set Baud Rate and turn on I2C Module
     14           */

   \                                 In section .text, align 2, keep-with-next
     15          void Init_I2C(I2C_MemMapPtr p)
     16          {
   \                     Init_I2C: (+1)
   \   00000000   0xB500             PUSH     {LR}
     17            if(p == I2C0_B)
   \   00000002   0x....             LDR      R1,??DataTable2  ;; 0x40066000
   \   00000004   0x4288             CMP      R0,R1
   \   00000006   0xD106             BNE      ??Init_I2C_0
     18              SIM_SCGC4 |= SIM_SCGC4_I2C0_MASK;
   \   00000008   0x....             LDR      R1,??DataTable2_1  ;; 0x40048034
   \   0000000A   0x6809             LDR      R1,[R1, #+0]
   \   0000000C   0x2240             MOVS     R2,#+64
   \   0000000E   0x430A             ORRS     R2,R2,R1
   \   00000010   0x....             LDR      R1,??DataTable2_1  ;; 0x40048034
   \   00000012   0x600A             STR      R2,[R1, #+0]
   \   00000014   0xE008             B        ??Init_I2C_1
     19            else if(p == I2C1_B)
   \                     ??Init_I2C_0: (+1)
   \   00000016   0x....             LDR      R1,??DataTable2_2  ;; 0x40067000
   \   00000018   0x4288             CMP      R0,R1
   \   0000001A   0xD105             BNE      ??Init_I2C_1
     20              SIM_SCGC4 |= SIM_SCGC4_I2C1_MASK;
   \   0000001C   0x....             LDR      R1,??DataTable2_1  ;; 0x40048034
   \   0000001E   0x6809             LDR      R1,[R1, #+0]
   \   00000020   0x2280             MOVS     R2,#+128
   \   00000022   0x430A             ORRS     R2,R2,R1
   \   00000024   0x....             LDR      R1,??DataTable2_1  ;; 0x40048034
   \   00000026   0x600A             STR      R2,[R1, #+0]
     21          
     22            // configure GPIO for I2C function
     23            PORTE_PCR24 = PORT_PCR_MUX(5);
   \                     ??Init_I2C_1: (+1)
   \   00000028   0x21A0             MOVS     R1,#+160
   \   0000002A   0x00C9             LSLS     R1,R1,#+3        ;; #+1280
   \   0000002C   0x....             LDR      R2,??DataTable2_3  ;; 0x4004d060
   \   0000002E   0x6011             STR      R1,[R2, #+0]
     24            PORTE_PCR25 = PORT_PCR_MUX(5);
   \   00000030   0x21A0             MOVS     R1,#+160
   \   00000032   0x00C9             LSLS     R1,R1,#+3        ;; #+1280
   \   00000034   0x....             LDR      R2,??DataTable2_4  ;; 0x4004d064
   \   00000036   0x6011             STR      R1,[R2, #+0]
     25          
     26            p->F  = 0x14;       // set MULT and ICR
   \   00000038   0x2114             MOVS     R1,#+20
   \   0000003A   0x7041             STRB     R1,[R0, #+1]
     27            p->C1 = I2C_C1_IICEN_MASK;       /* enable IIC */
   \   0000003C   0x2180             MOVS     R1,#+128
   \   0000003E   0x7081             STRB     R1,[R0, #+2]
     28          }
   \   00000040   0xBD00             POP      {PC}             ;; return
     29          

   \                                 In section .text, align 2, keep-with-next
     30          uint8_t I2C_ReadOneByte(uint8_t SlaveAddr, uint8_t RegAddr)
     31          {
   \                     I2C_ReadOneByte: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     32              uint8_t result;
     33          
     34              i2c_start(I2C0_B);
   \   00000006   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   00000008   0x7800             LDRB     R0,[R0, #+0]
   \   0000000A   0x2120             MOVS     R1,#+32
   \   0000000C   0x4301             ORRS     R1,R1,R0
   \   0000000E   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   00000010   0x7001             STRB     R1,[R0, #+0]
   \   00000012   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   00000014   0x7800             LDRB     R0,[R0, #+0]
   \   00000016   0x2110             MOVS     R1,#+16
   \   00000018   0x4301             ORRS     R1,R1,R0
   \   0000001A   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   0000001C   0x7001             STRB     R1,[R0, #+0]
     35              i2c_write_byte(I2C0_B, (SlaveAddr<<1) | I2C_WRITE);
   \   0000001E   0x0061             LSLS     R1,R4,#+1
   \   00000020   0xB2C9             UXTB     R1,R1
   \   00000022   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   00000024   0x.... 0x....      BL       i2c_write_byte
     36              
     37              i2c_wait(I2C0_B);
   \                     ??I2C_ReadOneByte_0: (+1)
   \   00000028   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   0000002A   0x7800             LDRB     R0,[R0, #+0]
   \   0000002C   0x0780             LSLS     R0,R0,#+30
   \   0000002E   0xD5FB             BPL      ??I2C_ReadOneByte_0
   \   00000030   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x2102             MOVS     R1,#+2
   \   00000036   0x4301             ORRS     R1,R1,R0
   \   00000038   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   0000003A   0x7001             STRB     R1,[R0, #+0]
     38              i2c_get_ack(I2C0_B);
   \   0000003C   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   0000003E   0x.... 0x....      BL       i2c_get_ack
     39          
     40              i2c_write_byte(I2C0_B, RegAddr);
   \   00000042   0x0029             MOVS     R1,R5
   \   00000044   0xB2C9             UXTB     R1,R1
   \   00000046   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   00000048   0x.... 0x....      BL       i2c_write_byte
     41              i2c_wait(I2C0_B);
   \                     ??I2C_ReadOneByte_1: (+1)
   \   0000004C   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0x0780             LSLS     R0,R0,#+30
   \   00000052   0xD5FB             BPL      ??I2C_ReadOneByte_1
   \   00000054   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   00000056   0x7800             LDRB     R0,[R0, #+0]
   \   00000058   0x2102             MOVS     R1,#+2
   \   0000005A   0x4301             ORRS     R1,R1,R0
   \   0000005C   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   0000005E   0x7001             STRB     R1,[R0, #+0]
     42              i2c_get_ack(I2C0_B);
   \   00000060   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   00000062   0x.... 0x....      BL       i2c_get_ack
     43          
     44              i2c_repeated_start(I2C0_B);
   \   00000066   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   00000068   0x7800             LDRB     R0,[R0, #+0]
   \   0000006A   0x2104             MOVS     R1,#+4
   \   0000006C   0x4301             ORRS     R1,R1,R0
   \   0000006E   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   00000070   0x7001             STRB     R1,[R0, #+0]
     45              i2c_write_byte(I2C0_B, (SlaveAddr<<1) | I2C_READ);
   \   00000072   0x0060             LSLS     R0,R4,#+1
   \   00000074   0x2101             MOVS     R1,#+1
   \   00000076   0x4301             ORRS     R1,R1,R0
   \   00000078   0xB2C9             UXTB     R1,R1
   \   0000007A   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   0000007C   0x.... 0x....      BL       i2c_write_byte
     46              i2c_wait(I2C0_B);
   \                     ??I2C_ReadOneByte_2: (+1)
   \   00000080   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   00000082   0x7800             LDRB     R0,[R0, #+0]
   \   00000084   0x0780             LSLS     R0,R0,#+30
   \   00000086   0xD5FB             BPL      ??I2C_ReadOneByte_2
   \   00000088   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   0000008A   0x7800             LDRB     R0,[R0, #+0]
   \   0000008C   0x2102             MOVS     R1,#+2
   \   0000008E   0x4301             ORRS     R1,R1,R0
   \   00000090   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   00000092   0x7001             STRB     R1,[R0, #+0]
     47              i2c_get_ack(I2C0_B);
   \   00000094   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   00000096   0x.... 0x....      BL       i2c_get_ack
     48          
     49              i2c_set_rx_mode(I2C0_B);
   \   0000009A   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x21EF             MOVS     R1,#+239
   \   000000A0   0x4001             ANDS     R1,R1,R0
   \   000000A2   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   000000A4   0x7001             STRB     R1,[R0, #+0]
     50          
     51              i2c_give_nack(I2C0_B);
   \   000000A6   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   000000A8   0x7800             LDRB     R0,[R0, #+0]
   \   000000AA   0x2108             MOVS     R1,#+8
   \   000000AC   0x4301             ORRS     R1,R1,R0
   \   000000AE   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   000000B0   0x7001             STRB     R1,[R0, #+0]
     52              result = i2c_read_byte(I2C0_B);
   \   000000B2   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   000000B4   0x.... 0x....      BL       i2c_read_byte
   \   000000B8   0x0004             MOVS     R4,R0
     53              i2c_wait(I2C0_B);
   \                     ??I2C_ReadOneByte_3: (+1)
   \   000000BA   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   000000BC   0x7800             LDRB     R0,[R0, #+0]
   \   000000BE   0x0780             LSLS     R0,R0,#+30
   \   000000C0   0xD5FB             BPL      ??I2C_ReadOneByte_3
   \   000000C2   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   000000C4   0x7800             LDRB     R0,[R0, #+0]
   \   000000C6   0x2102             MOVS     R1,#+2
   \   000000C8   0x4301             ORRS     R1,R1,R0
   \   000000CA   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   000000CC   0x7001             STRB     R1,[R0, #+0]
     54          
     55              i2c_stop(I2C0_B);
   \   000000CE   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   000000D0   0x7800             LDRB     R0,[R0, #+0]
   \   000000D2   0x21DF             MOVS     R1,#+223
   \   000000D4   0x4001             ANDS     R1,R1,R0
   \   000000D6   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   000000D8   0x7001             STRB     R1,[R0, #+0]
   \   000000DA   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   000000DC   0x7800             LDRB     R0,[R0, #+0]
   \   000000DE   0x21EF             MOVS     R1,#+239
   \   000000E0   0x4001             ANDS     R1,R1,R0
   \   000000E2   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   000000E4   0x7001             STRB     R1,[R0, #+0]
     56              result = i2c_read_byte(I2C0_B);
   \   000000E6   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   000000E8   0x.... 0x....      BL       i2c_read_byte
   \   000000EC   0x0004             MOVS     R4,R0
     57              pause(40);
   \   000000EE   0x2028             MOVS     R0,#+40
   \   000000F0   0x.... 0x....      BL       pause
     58              return result;
   \   000000F4   0x0020             MOVS     R0,R4
   \   000000F6   0xB2C0             UXTB     R0,R0
   \   000000F8   0xBD32             POP      {R1,R4,R5,PC}    ;; return
     59          }

   \                                 In section .text, align 2, keep-with-next
     60          void I2C_WriteOneByte(uint8_t SlaveAddr, uint8_t RegAddr, uint8_t data)
     61          {
   \                     I2C_WriteOneByte: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x000C             MOVS     R4,R1
   \   00000004   0x0015             MOVS     R5,R2
     62              i2c_start(I2C0_B);
   \   00000006   0x....             LDR      R1,??DataTable2_5  ;; 0x40066002
   \   00000008   0x7809             LDRB     R1,[R1, #+0]
   \   0000000A   0x2220             MOVS     R2,#+32
   \   0000000C   0x430A             ORRS     R2,R2,R1
   \   0000000E   0x....             LDR      R1,??DataTable2_5  ;; 0x40066002
   \   00000010   0x700A             STRB     R2,[R1, #+0]
   \   00000012   0x....             LDR      R1,??DataTable2_5  ;; 0x40066002
   \   00000014   0x7809             LDRB     R1,[R1, #+0]
   \   00000016   0x2210             MOVS     R2,#+16
   \   00000018   0x430A             ORRS     R2,R2,R1
   \   0000001A   0x....             LDR      R1,??DataTable2_5  ;; 0x40066002
   \   0000001C   0x700A             STRB     R2,[R1, #+0]
     63          
     64              i2c_write_byte(I2C0_B, (SlaveAddr<<1)|I2C_WRITE);
   \   0000001E   0x0041             LSLS     R1,R0,#+1
   \   00000020   0xB2C9             UXTB     R1,R1
   \   00000022   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   00000024   0x.... 0x....      BL       i2c_write_byte
     65              i2c_wait(I2C0_B);
   \                     ??I2C_WriteOneByte_0: (+1)
   \   00000028   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   0000002A   0x7800             LDRB     R0,[R0, #+0]
   \   0000002C   0x0780             LSLS     R0,R0,#+30
   \   0000002E   0xD5FB             BPL      ??I2C_WriteOneByte_0
   \   00000030   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x2102             MOVS     R1,#+2
   \   00000036   0x4301             ORRS     R1,R1,R0
   \   00000038   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   0000003A   0x7001             STRB     R1,[R0, #+0]
     66              i2c_get_ack(I2C0_B);
   \   0000003C   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   0000003E   0x.... 0x....      BL       i2c_get_ack
     67          
     68              i2c_write_byte(I2C0_B, RegAddr);
   \   00000042   0x0021             MOVS     R1,R4
   \   00000044   0xB2C9             UXTB     R1,R1
   \   00000046   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   00000048   0x.... 0x....      BL       i2c_write_byte
     69              i2c_wait(I2C0_B);
   \                     ??I2C_WriteOneByte_1: (+1)
   \   0000004C   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0x0780             LSLS     R0,R0,#+30
   \   00000052   0xD5FB             BPL      ??I2C_WriteOneByte_1
   \   00000054   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   00000056   0x7800             LDRB     R0,[R0, #+0]
   \   00000058   0x2102             MOVS     R1,#+2
   \   0000005A   0x4301             ORRS     R1,R1,R0
   \   0000005C   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   0000005E   0x7001             STRB     R1,[R0, #+0]
     70              i2c_get_ack(I2C0_B);
   \   00000060   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   00000062   0x.... 0x....      BL       i2c_get_ack
     71          
     72              i2c_write_byte(I2C0_B, data);
   \   00000066   0x0029             MOVS     R1,R5
   \   00000068   0xB2C9             UXTB     R1,R1
   \   0000006A   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   0000006C   0x.... 0x....      BL       i2c_write_byte
     73              i2c_wait(I2C0_B);
   \                     ??I2C_WriteOneByte_2: (+1)
   \   00000070   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   00000072   0x7800             LDRB     R0,[R0, #+0]
   \   00000074   0x0780             LSLS     R0,R0,#+30
   \   00000076   0xD5FB             BPL      ??I2C_WriteOneByte_2
   \   00000078   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   0000007A   0x7800             LDRB     R0,[R0, #+0]
   \   0000007C   0x2102             MOVS     R1,#+2
   \   0000007E   0x4301             ORRS     R1,R1,R0
   \   00000080   0x....             LDR      R0,??DataTable2_6  ;; 0x40066003
   \   00000082   0x7001             STRB     R1,[R0, #+0]
     74              i2c_get_ack(I2C0_B);
   \   00000084   0x....             LDR      R0,??DataTable2  ;; 0x40066000
   \   00000086   0x.... 0x....      BL       i2c_get_ack
     75          
     76              i2c_stop(I2C0_B);
   \   0000008A   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   0000008C   0x7800             LDRB     R0,[R0, #+0]
   \   0000008E   0x21DF             MOVS     R1,#+223
   \   00000090   0x4001             ANDS     R1,R1,R0
   \   00000092   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   00000094   0x7001             STRB     R1,[R0, #+0]
   \   00000096   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   00000098   0x7800             LDRB     R0,[R0, #+0]
   \   0000009A   0x21EF             MOVS     R1,#+239
   \   0000009C   0x4001             ANDS     R1,R1,R0
   \   0000009E   0x....             LDR      R0,??DataTable2_5  ;; 0x40066002
   \   000000A0   0x7001             STRB     R1,[R0, #+0]
     77              pause(40);
   \   000000A2   0x2028             MOVS     R0,#+40
   \   000000A4   0x.... 0x....      BL       pause
     78          }
   \   000000A8   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x40066000         DC32     0x40066000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x40048034         DC32     0x40048034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x40067000         DC32     0x40067000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x4004D060         DC32     0x4004d060

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x4004D064         DC32     0x4004d064

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x40066002         DC32     0x40066002

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x40066003         DC32     0x40066003
     79          /*******************************************************************/
     80          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   I2C_ReadOneByte
        16   -> i2c_get_ack
        16   -> i2c_read_byte
        16   -> i2c_write_byte
        16   -> pause
      16   I2C_WriteOneByte
        16   -> i2c_get_ack
        16   -> i2c_write_byte
        16   -> pause
       4   Init_I2C


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
     250  I2C_ReadOneByte
     170  I2C_WriteOneByte
      66  Init_I2C

 
 514 bytes in section .text
 
 514 bytes of CODE memory

Errors: none
Warnings: none
