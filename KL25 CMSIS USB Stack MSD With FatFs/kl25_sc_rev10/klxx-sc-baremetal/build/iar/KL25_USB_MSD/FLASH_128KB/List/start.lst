###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.3.8902/W32 for ARM        18/Feb/2016  22:52:56
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\src\cpu\start.c
#    Command line =  
#        "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\src\cpu\start.c" -D IAR -D
#        FREEDOM -D SD_DISK_ENABLE -lCN "D:\My Project\SDCardJicheng\KL25 CMSIS
#        USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\FLASH_128KB\List\"
#        -lB "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\FLASH_128KB\List\"
#        -o "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\FLASH_128KB\Obj\"
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config "C:\Program Files
#        (x86)\IAR Systems\Embedded Workbench
#        7.2\arm\INC\c\DLib_Config_Normal.h" -I "D:\My
#        Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\projects\KL25_USB_MSD\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\common\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\cpu\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\cpu\headers\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\i2c\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\llwu\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\lptmr\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\mcg\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\pmc\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\rcm\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\rtc\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\smc\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\uart\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\wdog\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\drivers\cmp\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\platforms\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\" -I
#        "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\projects\KL25_USB_MSD\CMSIS
#        USB Stack\inc\" -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack
#        MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\projects\KL25_USB_MSD\CMSIS
#        USB Stack\Porting use\" -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB
#        Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\projects\KL25_USB_MSD\SPI_SDCard\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\projects\KL25_USB_MSD\FATFS\"
#        -I "D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\..\..\..\src\projects\KL25_USB_MSD\FATFS\fsl_sd_disk\"
#        -Ol
#    List file    =  
#        D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\FLASH_128KB\List\start.lst
#    Object file  =  
#        D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With
#        FatFs\kl25_sc_rev10\klxx-sc-baremetal\build\iar\KL25_USB_MSD\FLASH_128KB\Obj\start.o
#
###############################################################################

D:\My Project\SDCardJicheng\KL25 CMSIS USB Stack MSD With FatFs\kl25_sc_rev10\klxx-sc-baremetal\src\cpu\start.c
      1          /*
      2           * File:	start.c
      3           * Purpose:	Kinetis L Family start up routines. 
      4           *
      5           * Notes:		
      6           */
      7          
      8          #include "start.h"
      9          #include "common.h"
     10          #include "sysinit.h"
     11          #include "rcm.h"
     12          
     13          
     14          /********************************************************************/
     15          /*!
     16           * \brief   Kinetis L Family Start
     17           * \return  None
     18           *
     19           * This function calls all of the necessary startup routines and then 
     20           * branches to the main process.
     21           */

   \                                 In section .text, align 2, keep-with-next
     22          void start(void)
     23          {            
   \                     start: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     24          		/* Disable the watchdog timer */
     25              SIM_COPC = 0x00;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x....             LDR      R1,??DataTable1  ;; 0x40048100
   \   00000006   0x6008             STR      R0,[R1, #+0]
     26              
     27          #ifndef CMSIS    // If conforming to CMSIS, we do not need to perform this code
     28          
     29          
     30          	/* Copy any vector or data sections that need to be in RAM */
     31          	common_startup();
   \   00000008   0x.... 0x....      BL       common_startup
     32          #endif
     33          
     34          	/* Perform clock initialization, default UART initialization,
     35               * initializes clock out function, and enables the abort button
     36               */
     37          	sysinit();
   \   0000000C   0x.... 0x....      BL       sysinit
     38                  
     39                  printf("\n\r\n\r");
   \   00000010   0x....             LDR      R0,??DataTable1_1
   \   00000012   0x.... 0x....      BL       printf
     40          	
     41          	/* Determine the last cause(s) of reset */
     42          	outSRS();	
   \   00000016   0x.... 0x....      BL       outSRS
     43          	
     44          	/* Determine specific Kinetis L Family device and revision */
     45          	cpu_identify();
   \   0000001A   0x.... 0x....      BL       cpu_identify
     46          	
     47          #ifndef CMSIS    // If conforming to CMSIS, we do not need to perform this code
     48          	/* Jump to main process */
     49          	main();
   \   0000001E   0x.... 0x....      BL       main
     50          
     51          	/* No actions to perform after this so wait forever */
     52          	while(1);
   \                     ??start_0: (+1)
   \   00000022   0xE7FE             B        ??start_0
     53          #endif 
     54          }
     55          /********************************************************************/
     56          /*!
     57           * \brief   Kinetis L Family Identify
     58           * \return  None
     59           *
     60           * This is primarly a reporting function that displays information
     61           * about the specific CPU to the default terminal including:
     62           * - Kinetis family
     63           * - package
     64           * - die revision
     65           * - P-flash size
     66           * - Ram size
     67           */

   \                                 In section .text, align 2, keep-with-next
     68          void cpu_identify (void)
     69          {
   \                     cpu_identify: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     70            uint16 temp;
     71              /* Determine the Kinetis family */
     72              switch((SIM_SDID & SIM_SDID_FAMID(0x7))>>SIM_SDID_FAMID_SHIFT) 
   \   00000002   0x....             LDR      R0,??DataTable1_2  ;; 0x40048024
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x0F00             LSRS     R0,R0,#+28
   \   00000008   0x0740             LSLS     R0,R0,#+29       ;; ZeroExtS R0,R0,#+29,#+29
   \   0000000A   0x0F40             LSRS     R0,R0,#+29
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD006             BEQ      ??cpu_identify_0
   \   00000010   0x2802             CMP      R0,#+2
   \   00000012   0xD00C             BEQ      ??cpu_identify_1
   \   00000014   0xD307             BCC      ??cpu_identify_2
   \   00000016   0x2804             CMP      R0,#+4
   \   00000018   0xD011             BEQ      ??cpu_identify_3
   \   0000001A   0xD30C             BCC      ??cpu_identify_4
   \   0000001C   0xE013             B        ??cpu_identify_5
     73              {  
     74              	case 0x0:
     75              		printf("\n\rKL0");
   \                     ??cpu_identify_0: (+1)
   \   0000001E   0x....             LDR      R0,??DataTable1_3
   \   00000020   0x.... 0x....      BL       printf
     76              		break;
   \   00000024   0xE012             B        ??cpu_identify_6
     77              	case 0x1:
     78              		printf("\n\rKL1");
   \                     ??cpu_identify_2: (+1)
   \   00000026   0x....             LDR      R0,??DataTable1_4
   \   00000028   0x.... 0x....      BL       printf
     79              		break;
   \   0000002C   0xE00E             B        ??cpu_identify_6
     80              	case 0x2:
     81              		printf("\n\rKL2");
   \                     ??cpu_identify_1: (+1)
   \   0000002E   0x....             LDR      R0,??DataTable1_5
   \   00000030   0x.... 0x....      BL       printf
     82              		break;
   \   00000034   0xE00A             B        ??cpu_identify_6
     83              	case 0x3:
     84              		printf("\n\rKL3");
   \                     ??cpu_identify_4: (+1)
   \   00000036   0x....             LDR      R0,??DataTable1_6
   \   00000038   0x.... 0x....      BL       printf
     85              		break;
   \   0000003C   0xE006             B        ??cpu_identify_6
     86              	case 0x4:
     87              		printf("\n\rKL4");
   \                     ??cpu_identify_3: (+1)
   \   0000003E   0x....             LDR      R0,??DataTable1_7
   \   00000040   0x.... 0x....      BL       printf
     88              		break;
   \   00000044   0xE002             B        ??cpu_identify_6
     89          	default:
     90          		printf("\n\rUnrecognized Kinetis family device.\n\r");  
   \                     ??cpu_identify_5: (+1)
   \   00000046   0x....             LDR      R0,??DataTable1_8
   \   00000048   0x.... 0x....      BL       printf
     91          		break;  	
     92              }
     93              
     94              /* Determine Sub-Family ID */
     95              switch((SIM_SDID & SIM_SDID_SUBFAMID(0x7))>>SIM_SDID_SUBFAMID_SHIFT) 
   \                     ??cpu_identify_6: (+1)
   \   0000004C   0x....             LDR      R0,??DataTable1_2  ;; 0x40048024
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x0E00             LSRS     R0,R0,#+24
   \   00000052   0x0740             LSLS     R0,R0,#+29       ;; ZeroExtS R0,R0,#+29,#+29
   \   00000054   0x0F40             LSRS     R0,R0,#+29
   \   00000056   0x2804             CMP      R0,#+4
   \   00000058   0xD002             BEQ      ??cpu_identify_7
   \   0000005A   0x2805             CMP      R0,#+5
   \   0000005C   0xD004             BEQ      ??cpu_identify_8
   \   0000005E   0xE007             B        ??cpu_identify_9
     96              {  
     97              	case 0x4:
     98              		printf("4");
   \                     ??cpu_identify_7: (+1)
   \   00000060   0x....             ADR      R0,??DataTable1_9  ;; "4"
   \   00000062   0x.... 0x....      BL       printf
     99              		break;
   \   00000066   0xE006             B        ??cpu_identify_10
    100              	case 0x5:
    101              		printf("5");
   \                     ??cpu_identify_8: (+1)
   \   00000068   0x....             ADR      R0,??DataTable1_10  ;; "5"
   \   0000006A   0x.... 0x....      BL       printf
    102              		break;
   \   0000006E   0xE002             B        ??cpu_identify_10
    103          	default:
    104          		printf("\n\rUnrecognized Kinetis sub-family device.\n\r");  
   \                     ??cpu_identify_9: (+1)
   \   00000070   0x....             LDR      R0,??DataTable1_11
   \   00000072   0x.... 0x....      BL       printf
    105          		break;  	
    106              }
    107              
    108              /* Determine the package size */
    109              switch((SIM_SDID & SIM_SDID_PINID(0xF))>>SIM_SDID_PINID_SHIFT) 
   \                     ??cpu_identify_10: (+1)
   \   00000076   0x....             LDR      R0,??DataTable1_2  ;; 0x40048024
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0x0700             LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   0000007C   0x0F00             LSRS     R0,R0,#+28
   \   0000007E   0x2800             CMP      R0,#+0
   \   00000080   0xD00C             BEQ      ??cpu_identify_11
   \   00000082   0x2801             CMP      R0,#+1
   \   00000084   0xD00E             BEQ      ??cpu_identify_12
   \   00000086   0x2802             CMP      R0,#+2
   \   00000088   0xD010             BEQ      ??cpu_identify_13
   \   0000008A   0x2804             CMP      R0,#+4
   \   0000008C   0xD012             BEQ      ??cpu_identify_14
   \   0000008E   0x2805             CMP      R0,#+5
   \   00000090   0xD014             BEQ      ??cpu_identify_15
   \   00000092   0x2806             CMP      R0,#+6
   \   00000094   0xD015             BEQ      ??cpu_identify_16
   \   00000096   0x2808             CMP      R0,#+8
   \   00000098   0xD016             BEQ      ??cpu_identify_17
   \   0000009A   0xE019             B        ??cpu_identify_18
    110              {  
    111              	case 0x0:
    112              		printf("16pin       ");
   \                     ??cpu_identify_11: (+1)
   \   0000009C   0x....             LDR      R0,??DataTable1_12
   \   0000009E   0x.... 0x....      BL       printf
    113              		break;
   \   000000A2   0xE018             B        ??cpu_identify_19
    114              	case 0x1:
    115              		printf("24pin       ");
   \                     ??cpu_identify_12: (+1)
   \   000000A4   0x....             LDR      R0,??DataTable1_13
   \   000000A6   0x.... 0x....      BL       printf
    116              		break;
   \   000000AA   0xE014             B        ??cpu_identify_19
    117              	case 0x2:
    118              		printf("32pin      ");
   \                     ??cpu_identify_13: (+1)
   \   000000AC   0x....             LDR      R0,??DataTable2
   \   000000AE   0x.... 0x....      BL       printf
    119              		break;
   \   000000B2   0xE010             B        ??cpu_identify_19
    120              	case 0x4:
    121              		printf("48pin      ");
   \                     ??cpu_identify_14: (+1)
   \   000000B4   0x....             LDR      R0,??DataTable2_1
   \   000000B6   0x.... 0x....      BL       printf
    122              		break;
   \   000000BA   0xE00C             B        ??cpu_identify_19
    123              	case 0x5:
    124              		printf("64pin      ");
   \                     ??cpu_identify_15: (+1)
   \   000000BC   0x....             LDR      R0,??DataTable2_2
   \   000000BE   0x.... 0x....      BL       printf
    125                  case 0x6:
    126              		printf("80pin      ");
   \                     ??cpu_identify_16: (+1)
   \   000000C2   0x....             LDR      R0,??DataTable2_3
   \   000000C4   0x.... 0x....      BL       printf
    127                  case 0x8:
    128              		printf("100pin      ");        
   \                     ??cpu_identify_17: (+1)
   \   000000C8   0x....             LDR      R0,??DataTable2_4
   \   000000CA   0x.... 0x....      BL       printf
    129              		break;
   \   000000CE   0xE002             B        ??cpu_identify_19
    130          	default:
    131          		printf("\n\rUnrecognized Kinetis package code.      ");  
   \                     ??cpu_identify_18: (+1)
   \   000000D0   0x....             LDR      R0,??DataTable2_5
   \   000000D2   0x.... 0x....      BL       printf
    132          		break;  	
    133              }
    134              
    135              /* Determine Attribute ID */
    136              switch((SIM_SDID & SIM_SDID_SERIESID(0x7))>>SIM_SDID_SERIESID_SHIFT) 
   \                     ??cpu_identify_19: (+1)
   \   000000D6   0x....             LDR      R0,??DataTable1_2  ;; 0x40048024
   \   000000D8   0x6800             LDR      R0,[R0, #+0]
   \   000000DA   0x0D00             LSRS     R0,R0,#+20
   \   000000DC   0x0740             LSLS     R0,R0,#+29       ;; ZeroExtS R0,R0,#+29,#+29
   \   000000DE   0x0F40             LSRS     R0,R0,#+29
   \   000000E0   0x2801             CMP      R0,#+1
   \   000000E2   0xD103             BNE      ??cpu_identify_20
    137              {  
    138              	case 0x1:
    139              		printf("\n\rLow Power Line with Cortex M0+\n\r\n\r");
   \   000000E4   0x....             LDR      R0,??DataTable2_6
   \   000000E6   0x.... 0x....      BL       printf
    140              		break;
   \   000000EA   0xE002             B        ??cpu_identify_21
    141          	default:
    142          		printf("\n\rUnrecognized Kinetis family attribute.\n\r");  
   \                     ??cpu_identify_20: (+1)
   \   000000EC   0x....             LDR      R0,??DataTable2_7
   \   000000EE   0x.... 0x....      BL       printf
    143          		break;  	
    144              }
    145              
    146              /* Determine the System SRAM Size */
    147              switch((SIM_SDID & SIM_SDID_SRAMSIZE(0x7))>>SIM_SDID_SRAMSIZE_SHIFT) 
   \                     ??cpu_identify_21: (+1)
   \   000000F2   0x....             LDR      R0,??DataTable1_2  ;; 0x40048024
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0x0C00             LSRS     R0,R0,#+16
   \   000000F8   0x0740             LSLS     R0,R0,#+29       ;; ZeroExtS R0,R0,#+29,#+29
   \   000000FA   0x0F40             LSRS     R0,R0,#+29
   \   000000FC   0x2800             CMP      R0,#+0
   \   000000FE   0xD00B             BEQ      ??cpu_identify_22
   \   00000100   0x2802             CMP      R0,#+2
   \   00000102   0xD011             BEQ      ??cpu_identify_23
   \   00000104   0xD30C             BCC      ??cpu_identify_24
   \   00000106   0x2804             CMP      R0,#+4
   \   00000108   0xD016             BEQ      ??cpu_identify_25
   \   0000010A   0xD311             BCC      ??cpu_identify_26
   \   0000010C   0x2806             CMP      R0,#+6
   \   0000010E   0xD01B             BEQ      ??cpu_identify_27
   \   00000110   0xD316             BCC      ??cpu_identify_28
   \   00000112   0x2807             CMP      R0,#+7
   \   00000114   0xD01C             BEQ      ??cpu_identify_29
   \   00000116   0xE01F             B        ??cpu_identify_30
    148              {  
    149              	case 0x0:
    150                    printf("SRAM Size: 0.5 KB\n\r");
   \                     ??cpu_identify_22: (+1)
   \   00000118   0x....             LDR      R0,??DataTable2_8
   \   0000011A   0x.... 0x....      BL       printf
    151              		break;
   \   0000011E   0xE01E             B        ??cpu_identify_31
    152                  case 0x1:
    153                    printf("SRAM Size:  1 KB\n\r");
   \                     ??cpu_identify_24: (+1)
   \   00000120   0x....             LDR      R0,??DataTable2_9
   \   00000122   0x.... 0x....      BL       printf
    154                    break;
   \   00000126   0xE01A             B        ??cpu_identify_31
    155                  case 0x2:
    156                    printf("SRAM Size:  2 KB\n\r");
   \                     ??cpu_identify_23: (+1)
   \   00000128   0x....             LDR      R0,??DataTable2_10
   \   0000012A   0x.... 0x....      BL       printf
    157                    break;
   \   0000012E   0xE016             B        ??cpu_identify_31
    158                  case 0x3:
    159                    printf("SRAM Size:  4 KB\n\r");
   \                     ??cpu_identify_26: (+1)
   \   00000130   0x....             LDR      R0,??DataTable2_11
   \   00000132   0x.... 0x....      BL       printf
    160                    break;
   \   00000136   0xE012             B        ??cpu_identify_31
    161                  case 0x4:
    162                    printf("SRAM Size:  8 KB\n\r");
   \                     ??cpu_identify_25: (+1)
   \   00000138   0x....             LDR      R0,??DataTable2_12
   \   0000013A   0x.... 0x....      BL       printf
    163                    break;
   \   0000013E   0xE00E             B        ??cpu_identify_31
    164                  case 0x5:
    165                    printf("SRAM Size:  16 KB\n\r");
   \                     ??cpu_identify_28: (+1)
   \   00000140   0x....             LDR      R0,??DataTable2_13
   \   00000142   0x.... 0x....      BL       printf
    166                    break;
   \   00000146   0xE00A             B        ??cpu_identify_31
    167                  case 0x6:
    168                    printf("SRAM Size:  32 KB\n\r");
   \                     ??cpu_identify_27: (+1)
   \   00000148   0x....             LDR      R0,??DataTable2_14
   \   0000014A   0x.... 0x....      BL       printf
    169                    break;
   \   0000014E   0xE006             B        ??cpu_identify_31
    170                  case 0x7:
    171                    printf("SRAM Size:  64 KB\n\r");
   \                     ??cpu_identify_29: (+1)
   \   00000150   0x....             LDR      R0,??DataTable2_15
   \   00000152   0x.... 0x....      BL       printf
    172                    break;
   \   00000156   0xE002             B        ??cpu_identify_31
    173          	default:
    174          		printf("\n\rUnrecognized SRAM Size.\n\r");  
   \                     ??cpu_identify_30: (+1)
   \   00000158   0x....             LDR      R0,??DataTable2_16
   \   0000015A   0x.... 0x....      BL       printf
    175          		break;  	
    176              }                
    177          
    178              /* Determine the revision ID */
    179              temp = ((SIM_SDID_REVID(0xF))>>SIM_SDID_REVID_SHIFT);
   \                     ??cpu_identify_31: (+1)
   \   0000015E   0x210F             MOVS     R1,#+15
    180              printf("Silicon rev %d\n\r ", temp);
   \   00000160   0xB289             UXTH     R1,R1
   \   00000162   0x....             LDR      R0,??DataTable2_17
   \   00000164   0x.... 0x....      BL       printf
    181              
    182              /* Determine the flash revision */
    183              //flash_identify();    
    184              
    185              /* Determine the P-flash size */
    186            switch((SIM_FCFG1 & SIM_FCFG1_PFSIZE(0xF))>>SIM_FCFG1_PFSIZE_SHIFT)
   \   00000168   0x....             LDR      R0,??DataTable2_18  ;; 0x4004804c
   \   0000016A   0x6800             LDR      R0,[R0, #+0]
   \   0000016C   0x0E00             LSRS     R0,R0,#+24
   \   0000016E   0x0700             LSLS     R0,R0,#+28       ;; ZeroExtS R0,R0,#+28,#+28
   \   00000170   0x0F00             LSRS     R0,R0,#+28
   \   00000172   0x2800             CMP      R0,#+0
   \   00000174   0xD00C             BEQ      ??cpu_identify_32
   \   00000176   0x2801             CMP      R0,#+1
   \   00000178   0xD00E             BEQ      ??cpu_identify_33
   \   0000017A   0x2803             CMP      R0,#+3
   \   0000017C   0xD010             BEQ      ??cpu_identify_34
   \   0000017E   0x2805             CMP      R0,#+5
   \   00000180   0xD012             BEQ      ??cpu_identify_35
   \   00000182   0x2807             CMP      R0,#+7
   \   00000184   0xD014             BEQ      ??cpu_identify_36
   \   00000186   0x2809             CMP      R0,#+9
   \   00000188   0xD016             BEQ      ??cpu_identify_37
   \   0000018A   0x280F             CMP      R0,#+15
   \   0000018C   0xD018             BEQ      ??cpu_identify_38
   \   0000018E   0xE01B             B        ??cpu_identify_39
    187              {
    188            	case 0x0:
    189              		printf("Flash size:  8 KB program flash, 0.25 KB protection region");
   \                     ??cpu_identify_32: (+1)
   \   00000190   0x....             LDR      R0,??DataTable2_19
   \   00000192   0x.... 0x....      BL       printf
    190              		break;
   \   00000196   0xE01A             B        ??cpu_identify_40
    191              	case 0x1:
    192              		printf("Flash size:  16 KB program flash, 0.5 KB protection region	");
   \                     ??cpu_identify_33: (+1)
   \   00000198   0x....             LDR      R0,??DataTable2_20
   \   0000019A   0x.... 0x....      BL       printf
    193              		break;
   \   0000019E   0xE016             B        ??cpu_identify_40
    194                  case 0x3:
    195              		printf("Flash size:  32 KB program flash, 1 KB protection region	");
   \                     ??cpu_identify_34: (+1)
   \   000001A0   0x....             LDR      R0,??DataTable2_21
   \   000001A2   0x.... 0x....      BL       printf
    196              		break;
   \   000001A6   0xE012             B        ??cpu_identify_40
    197              	case 0x5:
    198              		printf("Flash size:  64 KB program flash, 2 KB protection region	");
   \                     ??cpu_identify_35: (+1)
   \   000001A8   0x....             LDR      R0,??DataTable2_22
   \   000001AA   0x.... 0x....      BL       printf
    199              		break;
   \   000001AE   0xE00E             B        ??cpu_identify_40
    200                  case 0x7:
    201              		printf("Flash size:  128 KB program flash, 4 KB protection region	");
   \                     ??cpu_identify_36: (+1)
   \   000001B0   0x....             LDR      R0,??DataTable2_23
   \   000001B2   0x.... 0x....      BL       printf
    202              		break;
   \   000001B6   0xE00A             B        ??cpu_identify_40
    203                  case 0x9:
    204              		printf("Flash size:  256 KB program flash, 4 KB protection region	");
   \                     ??cpu_identify_37: (+1)
   \   000001B8   0x....             LDR      R0,??DataTable2_24
   \   000001BA   0x.... 0x....      BL       printf
    205              		break;
   \   000001BE   0xE006             B        ??cpu_identify_40
    206                  case 0xF:
    207              		printf("Flash size:  128 KB program flash, 4 KB protection region	");
   \                     ??cpu_identify_38: (+1)
   \   000001C0   0x....             LDR      R0,??DataTable2_23
   \   000001C2   0x.... 0x....      BL       printf
    208              		break;
   \   000001C6   0xE002             B        ??cpu_identify_40
    209          	default:
    210          		printf("ERR!! Undefined flash size\n\r");  
   \                     ??cpu_identify_39: (+1)
   \   000001C8   0x....             LDR      R0,??DataTable2_25
   \   000001CA   0x.... 0x....      BL       printf
    211          		break;  	  		
    212              }
    213          }
   \                     ??cpu_identify_40: (+1)
   \   000001CE   0xBD01             POP      {R0,PC}          ;; return
    214          /********************************************************************/
    215          /*!
    216           * \brief   flash Identify
    217           * \return  None
    218           *
    219           * This is primarly a reporting function that displays information
    220           * about the specific flash parameters and flash version ID for 
    221           * the current device. These parameters are obtained using a special
    222           * flash command call "read resource." The first four bytes returned
    223           * are the flash parameter revision, and the second four bytes are
    224           * the flash version ID.
    225           */

   \                                 In section .text, align 2, keep-with-next
    226          void flash_identify (void)
    227          {
   \                     flash_identify: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    228              /* Get the flash parameter version */
    229          
    230              /* Write the flash FCCOB registers with the values for a read resource command */
    231              FTFA_FCCOB0 = 0x03;
   \   00000002   0x2003             MOVS     R0,#+3
   \   00000004   0x....             LDR      R1,??DataTable2_26  ;; 0x40020007
   \   00000006   0x7008             STRB     R0,[R1, #+0]
    232              FTFA_FCCOB1 = 0x00;
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x....             LDR      R1,??DataTable2_27  ;; 0x40020006
   \   0000000C   0x7008             STRB     R0,[R1, #+0]
    233              FTFA_FCCOB2 = 0x00;
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x....             LDR      R1,??DataTable2_28  ;; 0x40020005
   \   00000012   0x7008             STRB     R0,[R1, #+0]
    234              FTFA_FCCOB3 = 0x00;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x....             LDR      R1,??DataTable2_29  ;; 0x40020004
   \   00000018   0x7008             STRB     R0,[R1, #+0]
    235              FTFA_FCCOB8 = 0x01;
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x....             LDR      R1,??DataTable2_30  ;; 0x4002000f
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
    236          
    237              /* All required FCCOBx registers are written, so launch the command */
    238              FTFA_FSTAT = FTFA_FSTAT_CCIF_MASK;
   \   00000020   0x2080             MOVS     R0,#+128
   \   00000022   0x....             LDR      R1,??DataTable2_31  ;; 0x40020000
   \   00000024   0x7008             STRB     R0,[R1, #+0]
    239          
    240              /* Wait for the command to complete */
    241              while(!(FTFA_FSTAT & FTFA_FSTAT_CCIF_MASK));
   \                     ??flash_identify_0: (+1)
   \   00000026   0x....             LDR      R0,??DataTable2_31  ;; 0x40020000
   \   00000028   0x7800             LDRB     R0,[R0, #+0]
   \   0000002A   0x0600             LSLS     R0,R0,#+24
   \   0000002C   0xD5FB             BPL      ??flash_identify_0
    242              
    243              printf("Flash parameter version %d ",FTFA_FCCOB4);
   \   0000002E   0x....             LDR      R0,??DataTable2_32  ;; 0x4002000b
   \   00000030   0x7801             LDRB     R1,[R0, #+0]
   \   00000032   0xB2C9             UXTB     R1,R1
   \   00000034   0x....             LDR      R0,??DataTable2_33
   \   00000036   0x.... 0x....      BL       printf
    244              printf(" %d ",FTFA_FCCOB5);
   \   0000003A   0x....             LDR      R0,??DataTable2_34  ;; 0x4002000a
   \   0000003C   0x7801             LDRB     R1,[R0, #+0]
   \   0000003E   0xB2C9             UXTB     R1,R1
   \   00000040   0x....             LDR      R0,??DataTable2_35
   \   00000042   0x.... 0x....      BL       printf
    245              printf(" %d ",FTFA_FCCOB6);
   \   00000046   0x....             LDR      R0,??DataTable2_36  ;; 0x40020009
   \   00000048   0x7801             LDRB     R1,[R0, #+0]
   \   0000004A   0xB2C9             UXTB     R1,R1
   \   0000004C   0x....             LDR      R0,??DataTable2_35
   \   0000004E   0x.... 0x....      BL       printf
    246              printf(" %d\n\r",FTFA_FCCOB7);
   \   00000052   0x....             LDR      R0,??DataTable2_37  ;; 0x40020008
   \   00000054   0x7801             LDRB     R1,[R0, #+0]
   \   00000056   0xB2C9             UXTB     R1,R1
   \   00000058   0x....             LDR      R0,??DataTable2_38
   \   0000005A   0x.... 0x....      BL       printf
    247          
    248              /* Get the flash version ID */   
    249          
    250              /* Write the flash FCCOB registers with the values for a read resource command */
    251              FTFA_FCCOB0 = 0x03;
   \   0000005E   0x2003             MOVS     R0,#+3
   \   00000060   0x....             LDR      R1,??DataTable2_26  ;; 0x40020007
   \   00000062   0x7008             STRB     R0,[R1, #+0]
    252              FTFA_FCCOB1 = 0x00;
   \   00000064   0x2000             MOVS     R0,#+0
   \   00000066   0x....             LDR      R1,??DataTable2_27  ;; 0x40020006
   \   00000068   0x7008             STRB     R0,[R1, #+0]
    253              FTFA_FCCOB2 = 0x00;
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x....             LDR      R1,??DataTable2_28  ;; 0x40020005
   \   0000006E   0x7008             STRB     R0,[R1, #+0]
    254              FTFA_FCCOB3 = 0x04;
   \   00000070   0x2004             MOVS     R0,#+4
   \   00000072   0x....             LDR      R1,??DataTable2_29  ;; 0x40020004
   \   00000074   0x7008             STRB     R0,[R1, #+0]
    255              FTFA_FCCOB8 = 0x01;
   \   00000076   0x2001             MOVS     R0,#+1
   \   00000078   0x....             LDR      R1,??DataTable2_30  ;; 0x4002000f
   \   0000007A   0x7008             STRB     R0,[R1, #+0]
    256          
    257              /* All required FCCOBx registers are written, so launch the command */
    258              FTFA_FSTAT = FTFA_FSTAT_CCIF_MASK;
   \   0000007C   0x2080             MOVS     R0,#+128
   \   0000007E   0x....             LDR      R1,??DataTable2_31  ;; 0x40020000
   \   00000080   0x7008             STRB     R0,[R1, #+0]
    259          
    260              /* Wait for the command to complete */
    261              while(!(FTFA_FSTAT & FTFA_FSTAT_CCIF_MASK));
   \                     ??flash_identify_1: (+1)
   \   00000082   0x....             LDR      R0,??DataTable2_31  ;; 0x40020000
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0x0600             LSLS     R0,R0,#+24
   \   00000088   0xD5FB             BPL      ??flash_identify_1
    262          
    263              printf("Flash version ID %d ",FTFA_FCCOB4);  
   \   0000008A   0x....             LDR      R0,??DataTable2_32  ;; 0x4002000b
   \   0000008C   0x7801             LDRB     R1,[R0, #+0]
   \   0000008E   0xB2C9             UXTB     R1,R1
   \   00000090   0x....             LDR      R0,??DataTable2_39
   \   00000092   0x.... 0x....      BL       printf
    264              printf(" %d",FTFA_FCCOB5);  
   \   00000096   0x....             LDR      R0,??DataTable2_34  ;; 0x4002000a
   \   00000098   0x7801             LDRB     R1,[R0, #+0]
   \   0000009A   0xB2C9             UXTB     R1,R1
   \   0000009C   0x....             ADR      R0,??DataTable2_40  ;; " %d"
   \   0000009E   0x.... 0x....      BL       printf
    265              printf(" %d ",FTFA_FCCOB6);  
   \   000000A2   0x....             LDR      R0,??DataTable2_36  ;; 0x40020009
   \   000000A4   0x7801             LDRB     R1,[R0, #+0]
   \   000000A6   0xB2C9             UXTB     R1,R1
   \   000000A8   0x....             LDR      R0,??DataTable2_35
   \   000000AA   0x.... 0x....      BL       printf
    266              printf("%d\n\r",FTFA_FCCOB7);  
   \   000000AE   0x....             LDR      R0,??DataTable2_37  ;; 0x40020008
   \   000000B0   0x7801             LDRB     R1,[R0, #+0]
   \   000000B2   0xB2C9             UXTB     R1,R1
   \   000000B4   0x....             LDR      R0,??DataTable2_41
   \   000000B6   0x.... 0x....      BL       printf
    267          }
   \   000000BA   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x40048100         DC32     0x40048100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40048024         DC32     0x40048024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x34 0x00          DC8      "4",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x35 0x00          DC8      "5",0x0,0x0
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x........         DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x........         DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     ?_14

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     ?_15

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     ?_16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     ?_17

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     ?_18

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     ?_19

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     ?_20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     ?_21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     ?_22

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     ?_23

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x........         DC32     ?_24

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_13:
   \   00000000   0x........         DC32     ?_25

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_14:
   \   00000000   0x........         DC32     ?_26

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_15:
   \   00000000   0x........         DC32     ?_27

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_16:
   \   00000000   0x........         DC32     ?_28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_17:
   \   00000000   0x........         DC32     ?_29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_18:
   \   00000000   0x4004804C         DC32     0x4004804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_19:
   \   00000000   0x........         DC32     ?_30

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_20:
   \   00000000   0x........         DC32     ?_31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_21:
   \   00000000   0x........         DC32     ?_32

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_22:
   \   00000000   0x........         DC32     ?_33

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_23:
   \   00000000   0x........         DC32     ?_34

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_24:
   \   00000000   0x........         DC32     ?_35

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_25:
   \   00000000   0x........         DC32     ?_36

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_26:
   \   00000000   0x40020007         DC32     0x40020007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_27:
   \   00000000   0x40020006         DC32     0x40020006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_28:
   \   00000000   0x40020005         DC32     0x40020005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_29:
   \   00000000   0x40020004         DC32     0x40020004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_30:
   \   00000000   0x4002000F         DC32     0x4002000f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_31:
   \   00000000   0x40020000         DC32     0x40020000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_32:
   \   00000000   0x4002000B         DC32     0x4002000b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_33:
   \   00000000   0x........         DC32     ?_37

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_34:
   \   00000000   0x4002000A         DC32     0x4002000a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_35:
   \   00000000   0x........         DC32     ?_38

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_36:
   \   00000000   0x40020009         DC32     0x40020009

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_37:
   \   00000000   0x40020008         DC32     0x40020008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_38:
   \   00000000   0x........         DC32     ?_39

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_39:
   \   00000000   0x........         DC32     ?_40

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_40:
   \   00000000   0x20 0x25          DC8      " %d"
   \              0x64 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_41:
   \   00000000   0x........         DC32     ?_42

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x0A 0x0D          DC8 "\012\015\012\015"
   \              0x0A 0x0D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x0A 0x0D          DC8 "\012\015KL0"
   \              0x4B 0x4C    
   \              0x30 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x0A 0x0D          DC8 "\012\015KL1"
   \              0x4B 0x4C    
   \              0x31 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x0A 0x0D          DC8 "\012\015KL2"
   \              0x4B 0x4C    
   \              0x32 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x0A 0x0D          DC8 "\012\015KL3"
   \              0x4B 0x4C    
   \              0x33 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x0A 0x0D          DC8 "\012\015KL4"
   \              0x4B 0x4C    
   \              0x34 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x0A 0x0D          DC8 "\012\015Unrecognized Kinetis family device.\012\015"
   \              0x55 0x6E    
   \              0x72 0x65    
   \              0x63 0x6F    
   \              0x67 0x6E    
   \              0x69 0x7A    
   \              0x65 0x64    
   \              0x20 0x4B    
   \              0x69 0x6E    
   \              0x65 0x74    
   \              0x69 0x73    
   \              0x20 0x66    
   \              0x61 0x6D    
   \              0x69 0x6C    
   \              0x79 0x20    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x2E 0x0A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 2
   \   00000000   0x34 0x00          DC8 "4"

   \                                 In section .rodata, align 2
   \   00000000   0x35 0x00          DC8 "5"

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x0A 0x0D          DC8 "\012\015Unrecognized Kinetis sub-family device.\012\015"
   \              0x55 0x6E    
   \              0x72 0x65    
   \              0x63 0x6F    
   \              0x67 0x6E    
   \              0x69 0x7A    
   \              0x65 0x64    
   \              0x20 0x4B    
   \              0x69 0x6E    
   \              0x65 0x74    
   \              0x69 0x73    
   \              0x20 0x73    
   \              0x75 0x62    
   \              0x2D 0x66    
   \              0x61 0x6D    
   \              0x69 0x6C    
   \              0x79 0x20    
   \              0x64 0x65    
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x2E 0x0A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_10:
   \   00000000   0x31 0x36          DC8 "16pin       "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_11:
   \   00000000   0x32 0x34          DC8 "24pin       "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_12:
   \   00000000   0x33 0x32          DC8 "32pin      "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_13:
   \   00000000   0x34 0x38          DC8 "48pin      "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_14:
   \   00000000   0x36 0x34          DC8 "64pin      "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_15:
   \   00000000   0x38 0x30          DC8 "80pin      "
   \              0x70 0x69    
   \              0x6E 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_16:
   \   00000000   0x31 0x30          DC8 "100pin      "
   \              0x30 0x70    
   \              0x69 0x6E    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000000D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_17:
   \   00000000   0x0A 0x0D          DC8 "\012\015Unrecognized Kinetis package code.      "
   \              0x55 0x6E    
   \              0x72 0x65    
   \              0x63 0x6F    
   \              0x67 0x6E    
   \              0x69 0x7A    
   \              0x65 0x64    
   \              0x20 0x4B    
   \              0x69 0x6E    
   \              0x65 0x74    
   \              0x69 0x73    
   \              0x20 0x70    
   \              0x61 0x63    
   \              0x6B 0x61    
   \              0x67 0x65    
   \              0x20 0x63    
   \              0x6F 0x64    
   \              0x65 0x2E    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_18:
   \   00000000   0x0A 0x0D          DC8 "\012\015Low Power Line with Cortex M0+\012\015\012\015"
   \              0x4C 0x6F    
   \              0x77 0x20    
   \              0x50 0x6F    
   \              0x77 0x65    
   \              0x72 0x20    
   \              0x4C 0x69    
   \              0x6E 0x65    
   \              0x20 0x77    
   \              0x69 0x74    
   \              0x68 0x20    
   \              0x43 0x6F    
   \              0x72 0x74    
   \              0x65 0x78    
   \              0x20 0x4D    
   \              0x30 0x2B    
   \              0x0A 0x0D    
   \              0x0A 0x0D    
   \              0x00         
   \   00000025   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_19:
   \   00000000   0x0A 0x0D          DC8 "\012\015Unrecognized Kinetis family attribute.\012\015"
   \              0x55 0x6E    
   \              0x72 0x65    
   \              0x63 0x6F    
   \              0x67 0x6E    
   \              0x69 0x7A    
   \              0x65 0x64    
   \              0x20 0x4B    
   \              0x69 0x6E    
   \              0x65 0x74    
   \              0x69 0x73    
   \              0x20 0x66    
   \              0x61 0x6D    
   \              0x69 0x6C    
   \              0x79 0x20    
   \              0x61 0x74    
   \              0x74 0x72    
   \              0x69 0x62    
   \              0x75 0x74    
   \              0x65 0x2E    
   \              0x0A 0x0D    
   \              0x00         
   \   0000002B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_20:
   \   00000000   0x53 0x52          DC8 "SRAM Size: 0.5 KB\012\015"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x30    
   \              0x2E 0x35    
   \              0x20 0x4B    
   \              0x42 0x0A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_21:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  1 KB\012\015"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x31 0x20    
   \              0x4B 0x42    
   \              0x0A 0x0D    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_22:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  2 KB\012\015"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x32 0x20    
   \              0x4B 0x42    
   \              0x0A 0x0D    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_23:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  4 KB\012\015"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x34 0x20    
   \              0x4B 0x42    
   \              0x0A 0x0D    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_24:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  8 KB\012\015"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x38 0x20    
   \              0x4B 0x42    
   \              0x0A 0x0D    
   \              0x00         
   \   00000013   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_25:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  16 KB\012\015"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x31 0x36    
   \              0x20 0x4B    
   \              0x42 0x0A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_26:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  32 KB\012\015"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x33 0x32    
   \              0x20 0x4B    
   \              0x42 0x0A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_27:
   \   00000000   0x53 0x52          DC8 "SRAM Size:  64 KB\012\015"
   \              0x41 0x4D    
   \              0x20 0x53    
   \              0x69 0x7A    
   \              0x65 0x3A    
   \              0x20 0x20    
   \              0x36 0x34    
   \              0x20 0x4B    
   \              0x42 0x0A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_28:
   \   00000000   0x0A 0x0D          DC8 "\012\015Unrecognized SRAM Size.\012\015"
   \              0x55 0x6E    
   \              0x72 0x65    
   \              0x63 0x6F    
   \              0x67 0x6E    
   \              0x69 0x7A    
   \              0x65 0x64    
   \              0x20 0x53    
   \              0x52 0x41    
   \              0x4D 0x20    
   \              0x53 0x69    
   \              0x7A 0x65    
   \              0x2E 0x0A    
   \              0x0D 0x00    

   \                                 In section .rodata, align 4
   \                     ?_29:
   \   00000000   0x53 0x69          DC8 "Silicon rev %d\012\015 "
   \              0x6C 0x69    
   \              0x63 0x6F    
   \              0x6E 0x20    
   \              0x72 0x65    
   \              0x76 0x20    
   \              0x25 0x64    
   \              0x0A 0x0D    
   \              0x20 0x00    
   \   00000012   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_30:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 38H, 20H, 4BH
   \              0x3A 0x20    
   \              0x20 0x38    
   \              0x20 0x4B    
   \   00000010   0x42 0x20          DC8 42H, 20H, 70H, 72H, 6FH, 67H, 72H, 61H
   \              0x70 0x72    
   \              0x6F 0x67    
   \              0x72 0x61    
   \   00000018   0x6D 0x20          DC8 6DH, 20H, 66H, 6CH, 61H, 73H, 68H, 2CH
   \              0x66 0x6C    
   \              0x61 0x73    
   \              0x68 0x2C    
   \   00000020   0x20 0x30          DC8 20H, 30H, 2EH, 32H, 35H, 20H, 4BH, 42H
   \              0x2E 0x32    
   \              0x35 0x20    
   \              0x4B 0x42    
   \   00000028   0x20 0x70          DC8 20H, 70H, 72H, 6FH, 74H, 65H, 63H, 74H
   \              0x72 0x6F    
   \              0x74 0x65    
   \              0x63 0x74    
   \   00000030   0x69 0x6F          DC8 69H, 6FH, 6EH, 20H, 72H, 65H, 67H, 69H
   \              0x6E 0x20    
   \              0x72 0x65    
   \              0x67 0x69    
   \   00000038   0x6F 0x6E          DC8 6FH, 6EH, 0
   \              0x00         
   \   0000003B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_31:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 31H, 36H, 20H
   \              0x3A 0x20    
   \              0x20 0x31    
   \              0x36 0x20    
   \   00000010   0x4B 0x42          DC8 4BH, 42H, 20H, 70H, 72H, 6FH, 67H, 72H
   \              0x20 0x70    
   \              0x72 0x6F    
   \              0x67 0x72    
   \   00000018   0x61 0x6D          DC8 61H, 6DH, 20H, 66H, 6CH, 61H, 73H, 68H
   \              0x20 0x66    
   \              0x6C 0x61    
   \              0x73 0x68    
   \   00000020   0x2C 0x20          DC8 2CH, 20H, 30H, 2EH, 35H, 20H, 4BH, 42H
   \              0x30 0x2E    
   \              0x35 0x20    
   \              0x4B 0x42    
   \   00000028   0x20 0x70          DC8 20H, 70H, 72H, 6FH, 74H, 65H, 63H, 74H
   \              0x72 0x6F    
   \              0x74 0x65    
   \              0x63 0x74    
   \   00000030   0x69 0x6F          DC8 69H, 6FH, 6EH, 20H, 72H, 65H, 67H, 69H
   \              0x6E 0x20    
   \              0x72 0x65    
   \              0x67 0x69    
   \   00000038   0x6F 0x6E          DC8 6FH, 6EH, 9, 0
   \              0x09 0x00    

   \                                 In section .rodata, align 4
   \                     ?_32:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 33H, 32H, 20H
   \              0x3A 0x20    
   \              0x20 0x33    
   \              0x32 0x20    
   \   00000010   0x4B 0x42          DC8 4BH, 42H, 20H, 70H, 72H, 6FH, 67H, 72H
   \              0x20 0x70    
   \              0x72 0x6F    
   \              0x67 0x72    
   \   00000018   0x61 0x6D          DC8 61H, 6DH, 20H, 66H, 6CH, 61H, 73H, 68H
   \              0x20 0x66    
   \              0x6C 0x61    
   \              0x73 0x68    
   \   00000020   0x2C 0x20          DC8 2CH, 20H, 31H, 20H, 4BH, 42H, 20H, 70H
   \              0x31 0x20    
   \              0x4B 0x42    
   \              0x20 0x70    
   \   00000028   0x72 0x6F          DC8 72H, 6FH, 74H, 65H, 63H, 74H, 69H, 6FH
   \              0x74 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \   00000030   0x6E 0x20          DC8 6EH, 20H, 72H, 65H, 67H, 69H, 6FH, 6EH
   \              0x72 0x65    
   \              0x67 0x69    
   \              0x6F 0x6E    
   \   00000038   0x09 0x00          DC8 9, 0
   \   0000003A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_33:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 36H, 34H, 20H
   \              0x3A 0x20    
   \              0x20 0x36    
   \              0x34 0x20    
   \   00000010   0x4B 0x42          DC8 4BH, 42H, 20H, 70H, 72H, 6FH, 67H, 72H
   \              0x20 0x70    
   \              0x72 0x6F    
   \              0x67 0x72    
   \   00000018   0x61 0x6D          DC8 61H, 6DH, 20H, 66H, 6CH, 61H, 73H, 68H
   \              0x20 0x66    
   \              0x6C 0x61    
   \              0x73 0x68    
   \   00000020   0x2C 0x20          DC8 2CH, 20H, 32H, 20H, 4BH, 42H, 20H, 70H
   \              0x32 0x20    
   \              0x4B 0x42    
   \              0x20 0x70    
   \   00000028   0x72 0x6F          DC8 72H, 6FH, 74H, 65H, 63H, 74H, 69H, 6FH
   \              0x74 0x65    
   \              0x63 0x74    
   \              0x69 0x6F    
   \   00000030   0x6E 0x20          DC8 6EH, 20H, 72H, 65H, 67H, 69H, 6FH, 6EH
   \              0x72 0x65    
   \              0x67 0x69    
   \              0x6F 0x6E    
   \   00000038   0x09 0x00          DC8 9, 0
   \   0000003A   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_34:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 31H, 32H, 38H
   \              0x3A 0x20    
   \              0x20 0x31    
   \              0x32 0x38    
   \   00000010   0x20 0x4B          DC8 20H, 4BH, 42H, 20H, 70H, 72H, 6FH, 67H
   \              0x42 0x20    
   \              0x70 0x72    
   \              0x6F 0x67    
   \   00000018   0x72 0x61          DC8 72H, 61H, 6DH, 20H, 66H, 6CH, 61H, 73H
   \              0x6D 0x20    
   \              0x66 0x6C    
   \              0x61 0x73    
   \   00000020   0x68 0x2C          DC8 68H, 2CH, 20H, 34H, 20H, 4BH, 42H, 20H
   \              0x20 0x34    
   \              0x20 0x4B    
   \              0x42 0x20    
   \   00000028   0x70 0x72          DC8 70H, 72H, 6FH, 74H, 65H, 63H, 74H, 69H
   \              0x6F 0x74    
   \              0x65 0x63    
   \              0x74 0x69    
   \   00000030   0x6F 0x6E          DC8 6FH, 6EH, 20H, 72H, 65H, 67H, 69H, 6FH
   \              0x20 0x72    
   \              0x65 0x67    
   \              0x69 0x6F    
   \   00000038   0x6E 0x09          DC8 6EH, 9, 0
   \              0x00         
   \   0000003B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_35:
   \   00000000   0x46 0x6C          DC8 46H, 6CH, 61H, 73H, 68H, 20H, 73H, 69H
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \   00000008   0x7A 0x65          DC8 7AH, 65H, 3AH, 20H, 20H, 32H, 35H, 36H
   \              0x3A 0x20    
   \              0x20 0x32    
   \              0x35 0x36    
   \   00000010   0x20 0x4B          DC8 20H, 4BH, 42H, 20H, 70H, 72H, 6FH, 67H
   \              0x42 0x20    
   \              0x70 0x72    
   \              0x6F 0x67    
   \   00000018   0x72 0x61          DC8 72H, 61H, 6DH, 20H, 66H, 6CH, 61H, 73H
   \              0x6D 0x20    
   \              0x66 0x6C    
   \              0x61 0x73    
   \   00000020   0x68 0x2C          DC8 68H, 2CH, 20H, 34H, 20H, 4BH, 42H, 20H
   \              0x20 0x34    
   \              0x20 0x4B    
   \              0x42 0x20    
   \   00000028   0x70 0x72          DC8 70H, 72H, 6FH, 74H, 65H, 63H, 74H, 69H
   \              0x6F 0x74    
   \              0x65 0x63    
   \              0x74 0x69    
   \   00000030   0x6F 0x6E          DC8 6FH, 6EH, 20H, 72H, 65H, 67H, 69H, 6FH
   \              0x20 0x72    
   \              0x65 0x67    
   \              0x69 0x6F    
   \   00000038   0x6E 0x09          DC8 6EH, 9, 0
   \              0x00         
   \   0000003B   0x00               DC8 0

   \                                 In section .rodata, align 4
   \                     ?_36:
   \   00000000   0x45 0x52          DC8 "ERR!! Undefined flash size\012\015"
   \              0x52 0x21    
   \              0x21 0x20    
   \              0x55 0x6E    
   \              0x64 0x65    
   \              0x66 0x69    
   \              0x6E 0x65    
   \              0x64 0x20    
   \              0x66 0x6C    
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x73 0x69    
   \              0x7A 0x65    
   \              0x0A 0x0D    
   \              0x00         
   \   0000001D   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_37:
   \   00000000   0x46 0x6C          DC8 "Flash parameter version %d "
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x70 0x61    
   \              0x72 0x61    
   \              0x6D 0x65    
   \              0x74 0x65    
   \              0x72 0x20    
   \              0x76 0x65    
   \              0x72 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x25 0x64    
   \              0x20 0x00    

   \                                 In section .rodata, align 4
   \                     ?_38:
   \   00000000   0x20 0x25          DC8 " %d "
   \              0x64 0x20    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_39:
   \   00000000   0x20 0x25          DC8 " %d\012\015"
   \              0x64 0x0A    
   \              0x0D 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_40:
   \   00000000   0x46 0x6C          DC8 "Flash version ID %d "
   \              0x61 0x73    
   \              0x68 0x20    
   \              0x76 0x65    
   \              0x72 0x73    
   \              0x69 0x6F    
   \              0x6E 0x20    
   \              0x49 0x44    
   \              0x20 0x25    
   \              0x64 0x20    
   \              0x00         
   \   00000015   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x20 0x25          DC8 " %d"
   \              0x64 0x00    

   \                                 In section .rodata, align 4
   \                     ?_42:
   \   00000000   0x25 0x64          DC8 "%d\012\015"
   \              0x0A 0x0D    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         
    268          /********************************************************************/
    269          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   cpu_identify
         8   -> printf
       8   flash_identify
         8   -> printf
       8   start
         8   -> common_startup
         8   -> cpu_identify
         8   -> main
         8   -> outSRS
         8   -> printf
         8   -> sysinit


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_13
       4  ??DataTable2_14
       4  ??DataTable2_15
       4  ??DataTable2_16
       4  ??DataTable2_17
       4  ??DataTable2_18
       4  ??DataTable2_19
       4  ??DataTable2_2
       4  ??DataTable2_20
       4  ??DataTable2_21
       4  ??DataTable2_22
       4  ??DataTable2_23
       4  ??DataTable2_24
       4  ??DataTable2_25
       4  ??DataTable2_26
       4  ??DataTable2_27
       4  ??DataTable2_28
       4  ??DataTable2_29
       4  ??DataTable2_3
       4  ??DataTable2_30
       4  ??DataTable2_31
       4  ??DataTable2_32
       4  ??DataTable2_33
       4  ??DataTable2_34
       4  ??DataTable2_35
       4  ??DataTable2_36
       4  ??DataTable2_37
       4  ??DataTable2_38
       4  ??DataTable2_39
       4  ??DataTable2_4
       4  ??DataTable2_40
       4  ??DataTable2_41
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       8  ?_0
       8  ?_1
      16  ?_10
      16  ?_11
      12  ?_12
      12  ?_13
      12  ?_14
      12  ?_15
      16  ?_16
      44  ?_17
      40  ?_18
      44  ?_19
       8  ?_2
      20  ?_20
      20  ?_21
      20  ?_22
      20  ?_23
      20  ?_24
      20  ?_25
      20  ?_26
      20  ?_27
      28  ?_28
      20  ?_29
       8  ?_3
      60  ?_30
      60  ?_31
      60  ?_32
      60  ?_33
      60  ?_34
      60  ?_35
      32  ?_36
      28  ?_37
       8  ?_38
       8  ?_39
       8  ?_4
      24  ?_40
       4  ?_41
       8  ?_42
       8  ?_5
      40  ?_6
       2  ?_7
       2  ?_8
      44  ?_9
     464  cpu_identify
     188  flash_identify
      36  start

 
 1 040 bytes in section .rodata
   912 bytes in section .text
 
   912 bytes of CODE  memory
 1 040 bytes of CONST memory

Errors: none
Warnings: none
